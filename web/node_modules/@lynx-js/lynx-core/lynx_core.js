var $e = function() {
    return this || (0, eval)('this');
  }(),
  y = $e;
function Ae(n) {
  let e = typeof n;
  return e === 'object'
    ? Array.isArray(n)
      ? 'array'
      : n == null
      ? 'null'
      : n instanceof Date
      ? 'date'
      : n instanceof RegExp
      ? 'regExp'
      : 'object'
    : e;
}
function P(n) {
  return typeof n == 'string';
}
function H(n) {
  return Ae(n) === 'object';
}
function q(n) {
  return Ae(n) === 'function';
}
function K(n) {
  switch (Object.prototype.toString.call(n)) {
    case '[object Error]':
      return !0;
    case '[object Exception]':
      return !0;
    case '[object DOMException]':
      return !0;
    default:
      return Ge(n, Error);
  }
}
function Ge(n, e) {
  try {
    return n instanceof e;
  } catch {
    return !1;
  }
}
function me() {}
function X(n) {
  return nativeConsole;
}
var Qe = function() {
    return this || (0, eval)('this');
  }(),
  ut = X(`groupId:${Qe.groupId || '-1'}`),
  _e = nativeConsole;
var f = _e;
var Oe = (t => (t[t.Error = 1] = 'Error', t[t.Warn = 2] = 'Warn', t))(Oe || {}),
  z = class extends Error {
    constructor(e, t) {
      super(e), t && (this.stack = t);
    }
  },
  Z = class extends z {
    constructor() {
      super(...arguments);
      this.kind = 'INTERNAL_ERROR';
    }
  },
  ee = class extends z {
    constructor() {
      super(...arguments);
      this.kind = 'USER_ERROR';
    }
  },
  Ie = class extends ee {
    constructor() {
      super(...arguments);
      this.name = 'USER_VALIDATE_ERROR';
    }
  },
  x = class extends ee {
    constructor() {
      super(...arguments);
      this.name = 'USER_RUNTIME_ERROR';
    }
  },
  R = class extends Z {
    constructor() {
      super(...arguments);
      this.name = 'INTERNAL_RUNTIME_ERROR';
    }
  },
  Me = class extends Error {
    constructor(e, t) {
      super(e), t && (this.stack = t);
    }
  },
  te = class extends Z {
    constructor() {
      super(...arguments);
      this.name = 'INVOKE_ERROR';
    }
  },
  Ce = class extends Error {
    constructor(e) {
      super(`APP-SERVICE-Engine: ${e}`),
        this.type = 'AppServiceEngineKnownError';
    }
  };
var S = '__Card__',
  j = 'app-service.js',
  Pe = 'LynxGetSourceMapReleaseError',
  A = {
    filename: 'lynx_core',
    slot: 'a4e6b17d78c4efc4b74beda8ee7ef85afb77d3e9',
    release: 'unknown_version',
  };
var re = class {
  constructor() {
    this.observersFunc = [];
  }
  registerObserver(e) {
    if (this.observersFunc.includes(e)) {
      return f.log('Subject: Observer has been attached already.');
    }
    this.observersFunc.push(e);
  }
  removeObserver(e) {
    let t = this.observersFunc.indexOf(e);
    if (t === -1) return f.log('Subject: Nonexistent observer.');
    this.observersFunc.splice(t, 1);
  }
  notifyDataChange(e) {
    this.observersFunc.forEach(t => {
      if (typeof t == 'function') {
        try {
          t(e);
        } catch (r) {
          f.log('SharedData change and notifyDataChange error info:' + r);
        }
      }
    });
  }
};
y.multiApps = {};
y.currentAppId = '';
y.globComponentRegistPath = '';
y.sharedData = {};
y.globDynamicComponentEntry = S;
y.shareDataSubject = new re();
y.TaroLynx = {};
y.bundleSupportLoadScript = !0;
var { loadScript: Mt } = y, c = y;
var We =
  (t => (t[t.TypescriptBundleSupportLoadScript = 28] =
    'TypescriptBundleSupportLoadScript',
    t[t.TypescriptHeliumCreateCanvasWait = 66] =
      'TypescriptHeliumCreateCanvasWait',
    t))(We || {});
var fe;
function I(n) {
  fe === void 0 && (fe = typeof f.alog == 'function'),
    fe && f.alog('[LynxJSSDK]' + n);
}
var he;
function Lt(n) {
  he === void 0 && (he = typeof f.report == 'function'),
    he && f.report('[LynxJSSDK]' + n);
}
var Je = /\d+/,
  b = class n {
    constructor(e) {
      this.major = 0;
      this.minor = 0;
      this.revision = 0;
      this.build = 0;
      e = String(e),
        [this.major = 0, this.minor = 0, this.revision = 0, this.build = 0] = e
          .split('.').map(t => {
            let r = Je.exec(t);
            return r && r.length > 0 ? +r[0] : 0;
          });
    }
    gt(e) {
      return typeof e == 'string' && (e = new n(e)),
        this.major > e.major
          ? !0
          : this.major < e.major
          ? !1
          : this.minor > e.minor
          ? !0
          : this.minor < e.minor
          ? !1
          : this.revision > e.revision
          ? !0
          : this.revision < e.revision
          ? !1
          : this.build > e.build
          ? !0
          : (this.build < e.build, !1);
    }
    eq(e) {
      return typeof e == 'string' && (e = new n(e)),
        this.major === e.major && this.minor === e.minor
        && this.revision === e.revision && this.build === e.build;
    }
    lt(e) {
      return this.eq(e) ? !1 : !this.gt(e);
    }
    gte(e) {
      return this.eq(e) || this.gt(e);
    }
    lte(e) {
      return this.eq(e) || this.lt(e);
    }
  },
  Ye = b,
  wt = new b('2.4'),
  Ut = new b('2.7'),
  kt = new b('2.9'),
  Ft = new b('2.12'),
  Bt = new b('2.14');
var jt = 0,
  Vt = 10200,
  $t = 10201,
  Gt = 10299,
  Qt = 10301,
  Wt = 10500,
  Jt = 10701,
  Yt = 20100,
  Ht = 20201,
  Kt = 30100,
  Xt = 30101,
  zt = 30102,
  Zt = 30103,
  er = 30196,
  tr = 30199,
  rr = 30200,
  nr = 30300,
  or = 30302,
  ir = 30303,
  sr = 30304,
  ar = 30305,
  lr = 30400,
  pr = 32101,
  cr = 32102,
  ur = 32103,
  dr = 39800,
  mr = 39900,
  _r = 40101,
  fr = 40102,
  hr = 40199,
  gr = 50101,
  yr = 50102,
  Er = 50201,
  vr = 60001,
  xr = 60100,
  Rr = 60201,
  Sr = 60301,
  br = 69900,
  Nr = 90101,
  Tr = 90102,
  Ar = 90103,
  Ir = 90104,
  Mr = 90800,
  Cr = 99800,
  Or = 99900,
  Pr = 109900,
  Lr = 110100,
  Dr = 111101,
  wr = 111102,
  Ur = 120200,
  kr = 130100,
  Fr = 140100,
  Br = 140200,
  qr = 140300,
  jr = 140401,
  Vr = 149900,
  $r = 160100,
  Gr = 160101,
  Qr = 160102,
  Wr = 160200,
  Jr = 190100,
  Yr = 190200,
  Hr = 190300,
  Kr = 200101,
  Xr = 220101,
  zr = 220201,
  Zr = 220202,
  en = 220203,
  tn = 220204,
  rn = 220205,
  nn = 220206,
  on = 220207,
  sn = 220301,
  an = 229800,
  ln = 990100,
  pn = 990200;
function E(n, e, t) {
  let { originError: r, errorCode: o, errorLevel: i, runType: l = A } = t ?? {};
  f.error('The following error occurred in the JSRuntime:'),
    f.error(`${n?.message}
${n?.stack}`),
    n.cause = H(n.cause) ? JSON.stringify(n.cause) : n.cause;
  try {
    e.reportException(n, {
      ...l,
      buildVersion: 'unknown_version',
      versionCode: 'unknown_version',
      errorCode: o,
      errorLevel: i,
    });
  } catch (a) {
    f.error(
      `reportError err:
`,
      a,
    );
  }
}
function He(n, e, t = A, r, o) {
  return E(n, e, {
    runType: t,
    originError: r,
    __sourcemap__release__: o.__sourcemap__release__,
  });
}
function Ke(
  {
    error: n,
    nativeApp: e,
    runType: t = A,
    rawError: r,
    __sourcemap__release__: o,
    getSourceMapRelease: i,
  },
) {
  E(n, e, {
    originError: r,
    runType: t,
    __sourcemap__release__: o,
    getSourceMapRelease: i,
  });
}
function On(n, e, t, r = A) {
  return q(t) ? Le('USER_ERROR', n, t, e, r) : me;
}
function Le(n = 'INTERNAL_ERROR', e, t, r, o) {
  return function(...l) {
    try {
      return t.apply(this, l);
    } catch (a) {
      let d = `${e} 
${a.message}`;
      t.name !== 'onError' && typeof r.onError == 'function'
        && r.onError(
          `Card ${t.name} exec error:${d}
${a.stack}`,
          a,
        );
      let m = n === 'INTERNAL_ERROR' ? new R(d, a.stack) : new x(d, a.stack);
      f.log(`wrapError-${e}`, m),
        E(m, r._nativeApp, {
          runType: o,
          __sourcemap__release__: r.__sourcemap__release__,
          getSourceMapRelease: r.getSourceMapRelease,
        });
    }
  };
}
function Pn(n, e, t, r = A) {
  return q(t) ? Le('INTERNAL_ERROR', n, t, e, r) : me;
}
var V = class {
  constructor(e, t) {
    this.getApp = e;
    this.getNativeApp = t;
    this.setSourceMapRelease = e => {
      if (
        K(e) && e.name === g.kGetSourceMapReleaseErrorName && P(e.message)
        && P(e.stack)
      ) {
        this.getNativeApp().__SetSourceMapRelease({
          name: e.name,
          message: e.message,
          stack: e.stack,
        });
        return;
      }
      I(`setSourceMapRelease failed with error: ${JSON.stringify(e)}`);
    };
    this.getSourceMapRelease = e => {
      if (!this.getNativeApp().__GetSourceMapRelease(e)) {
        return this.getNativeApp().__GetSourceMapRelease(
          g.kDefaultSourceMapURL,
        );
      }
    };
    this.getApp = e, this.getNativeApp = t;
  }
  rebind(e) {
    this.getApp = e;
  }
};
var N = class {
  constructor(e) {
    this._internal_callNativeModule = e, this._events = new Map();
  }
  getEventsSize(e) {
    return this._events.get(e)?.length;
  }
  setCallNativeModule(e) {
    this._internal_callNativeModule = e;
  }
  addListener(e, t, r) {
    let o = this._events.get(e);
    e == 'keyboardstatuschanged' && this._internal_callNativeModule
    && this._internal_callNativeModule(
      'LynxSetModule',
      'switchKeyBoardDetect',
      [!0],
    ),
      o
        ? o.push({ listener: t, context: r })
        : this._events.set(e, [{ listener: t, context: r }]);
  }
  removeListener(e, t) {
    if (typeof t != 'function') {
      throw new Error('removeListener only takes instances of Function');
    }
    let r = this._events.get(e), o = 0;
    Array.isArray(r) && r.some(l => {
      if (t === l.listener) return !0;
      o++;
    }) && r.splice(o, 1),
      e == 'keyboardstatuschanged' && this._internal_callNativeModule
      && this._internal_callNativeModule(
        'LynxSetModule',
        'switchKeyBoardDetect',
        [!1],
      );
  }
  emit(e, t) {
    let r = this._events.get(e);
    Array.isArray(r) && r.forEach(o => {
      let { listener: i, context: l } = o;
      typeof i == 'function' && i.apply(l || this, t);
    });
  }
  removeAllListeners(e) {
    if (typeof e == 'string') {
      this._events.delete(e);
      return;
    }
    this._events = new Map();
  }
  trigger(e, t) {
    let r = this._events.get(e);
    Array.isArray(r)
      && (typeof t == 'string' && (t = JSON.parse(t)),
        r.forEach(o => {
          let { listener: i, context: l } = o;
          typeof i == 'function' && i.call(l || this, t);
        }));
  }
  toggle(e, ...t) {
    this.emit(e, t);
  }
};
function Xe() {
  return new N();
}
var ne = class {
    constructor() {
      this._beforePublishEvent = new ge();
    }
  },
  ge = class extends N {
    add(e, t, r) {
      return super.addListener(e, t, r), this;
    }
    remove(e, t) {
      return super.removeListener(e, t), this;
    }
  };
var $ = N;
var oe = class {
  constructor(e) {
    this._textInfoModule = void 0;
    this.getTextInfo = (
      e,
      t,
    ) => (this._textInfoModule === void 0
      && (this._textInfoModule = this._nativeModules.LynxTextInfoModule),
      this._textInfoModule && this._textInfoModule.getTextInfo
        ? this._textInfoModule.getTextInfo(e, t)
        : { width: e.length });
    this._nativeModules = e;
  }
};
var ie = class {
  constructor(e) {
    this.resumeExposure = () => {
      this._exposureModule.resumeExposure();
    };
    this.stopExposure = e => {
      this._exposureModule.stopExposure(e);
    };
    this.setObserverFrameRate = e => {
      this._exposureModule.setObserverFrameRate(e);
    };
    this._nativeModules = e,
      this._exposureModule = this._nativeModules.LynxExposureModule;
  }
};
var ye = class {
    constructor(e, t) {
      this._selector = e, this._callback = t;
    }
    invokeCallback(e) {
      this._callback(e);
    }
  },
  Ee = class {
    constructor(e, t, r) {
      this._id = e,
        this._intersectionObserverModule = t,
        this._manager = r,
        this._observationTargets = [],
        this._defaultMargins = { left: 0, right: 0, top: 0, bottom: 0 };
    }
    relativeTo(e, t) {
      return this._intersectionObserverModule.relativeTo(
        this._id,
        e,
        t || this._defaultMargins,
      ),
        this;
    }
    relativeToViewport(e) {
      return this._intersectionObserverModule.relativeToViewport(
        this._id,
        e || this._defaultMargins,
      ),
        this;
    }
    relativeToScreen(e) {
      return this._intersectionObserverModule.relativeToScreen(
        this._id,
        e || this._defaultMargins,
      ),
        this;
    }
    observe(e, t) {
      this._observationTargets.push(new ye(e, t)),
        this._intersectionObserverModule.observe(
          this._id,
          e,
          this._observationTargets.length - 1,
        );
    }
    disconnect() {
      this._intersectionObserverModule.disconnect(this._id),
        this._manager.removeObserver(this._id);
    }
    invokeCallback(e, t) {
      e < this._observationTargets.length
        && this._observationTargets[e].invokeCallback(t);
    }
  },
  se = class {
    constructor(e) {
      this._nativeModules = e,
        this._observerId = 0,
        this._observers = {},
        this._defaultOptions = {
          thresholds: [0],
          initialRatio: 0,
          observeAll: !1,
        };
    }
    createIntersectionObserver(e, t) {
      let r = this._nativeModules.IntersectionObserverModule,
        o = new Ee(this._observerId, r, this);
      return this._observers[this._observerId] = o,
        r.createIntersectionObserver(
          this._observerId,
          e,
          t || this._defaultOptions,
        ),
        this._observerId++,
        o;
    }
    getObserver(e) {
      return this._observers[e];
    }
    removeObserver(e) {
      this._observers[e] = null;
    }
  };
var L = {
    onSetup: 'lynx.performance.timing.onSetup',
    onUpdate: 'lynx.performance.timing.onUpdate',
  },
  G = class {
    constructor(e, t) {
      this._emitter = e,
        this._generatePipelineOptions = t.generatePipelineOptions,
        this._onPipelineStart = t.onPipelineStart,
        this._markTiming = t.markPipelineTiming,
        this._profileStart = t.profileStart,
        this._profileEnd = t.profileEnd,
        this._profileMark = t.profileMark,
        this._profileFlowId = t.profileFlowId,
        this._bindPipelineIdWithTimingFlag = t.bindPipelineIdWithTimingFlag;
    }
    profileStart(e, t) {
      this._profileStart(e, t);
    }
    profileEnd() {
      this._profileEnd();
    }
    profileMark(e, t) {
      this._profileMark(e, t);
    }
    profileFlowId() {
      return this._profileFlowId();
    }
    addTimingListener(e) {
      this._emitter.addListener(L.onSetup, e.onSetup, e),
        this._emitter.addListener(L.onUpdate, e.onUpdate, e);
    }
    removeTimingListener(e) {
      this._emitter.removeListener(L.onSetup, e.onSetup),
        this._emitter.removeListener(L.onUpdate, e.onUpdate);
    }
    removeAllTimingListener() {
      this._emitter.removeAllListeners(L.onSetup),
        this._emitter.removeAllListeners(L.onUpdate);
    }
    _initializeAndStartPipeline() {
      let e = this._generatePipelineOptions();
      return e && this._onPipelineStart(e.pipelineID), e;
    }
    _checkAndBindTimingFlag(e, t) {
      if (!e) return;
      let r = '__lynx_timing_flag';
      t[r]
        && (this._bindPipelineIdWithTimingFlag(e.pipelineID, t[r]),
          this._markTiming(e.pipelineID, 'update_set_state_trigger'),
          e.needTimestamps = !0);
    }
  };
var ve = G;
var De = c.LynxJSBI;
var T = class n {
  constructor(e) {
    this._cachedFunctions = {};
    for (let t in e) {
      Object.defineProperty(this, t, {
        get() {
          if (this._cachedFunctions[t]) return this._cachedFunctions[t];
          let r = e[t];
          return typeof r == 'function' && (this._cachedFunctions[t] = r), r;
        },
      });
    }
  }
  static create(e) {
    return new n(e);
  }
};
var ae;
function ze() {
  return !0;
}
function we(n, e, t) {
  if (ze()) {
    let { getPromise: r } = c;
    return typeof r == 'function'
      ? r({ setTimeout: n, onUnhandled: e, clearTimeout: t })
      : c.Promise;
  } else return c.Promise;
}
var D = class n {
  constructor() {
    this._bodyData = null;
  }
  setBody(e) {
    if (e instanceof n) this._bodyData = e._bodyData.clone;
    else {
      let t = { bodyData: e, isArrayBuffer: !1 };
      e instanceof ArrayBuffer
        ? t.isArrayBuffer = !0
        : e instanceof DataView
        ? (t.isArrayBuffer = !0,
          t.bodyData = e.buffer.slice(
            e.byteOffset,
            e.byteOffset + e.byteLength,
          ))
        : ArrayBuffer.isView(e)
        ? (t.isArrayBuffer = !0, t.bodyData = e.buffer)
        : globalThis.URLSearchParams && e instanceof URLSearchParams
          && (t.bodyData = e.toString()),
        this._bodyData = globalThis.CreateBodyNative(t);
    }
  }
  arrayBuffer() {
    return Promise.resolve(this._bodyData.arrayBuffer);
  }
  text() {
    return Promise.resolve(this._bodyData.text);
  }
  json() {
    return Promise.resolve(this._bodyData.json);
  }
  get bodyUsed() {
    return this._bodyData.bodyUsed;
  }
};
var Ze,
  Q = class n {
    constructor(e) {
      this._headers_map = new Map();
      this[Ze] = 'Headers';
      if (e === null || typeof e == 'number') {
        throw new TypeError('Headers init with null/number');
      }
      if (e instanceof n) { for (let [t, r] of e) this.append(t, r); }
      else {Array.isArray(e)
          ? e.forEach(([t, r]) => {
            this.append(t, Array.isArray(r) ? r.join(' ') : r);
          })
          : e && Object.getOwnPropertyNames(e).forEach(t => {
            let r = e[t];
            this.append(t, Array.isArray(r) ? r.join(' ') : r);
          });}
    }
    [(Ze = Symbol.toStringTag, Symbol.iterator)]() {
      return this.entries();
    }
    *keys() {
      for (let [e, t] of this._headers_map) yield e;
    }
    *values() {
      for (let [e, t] of this._headers_map) yield t;
    }
    *entries() {
      for (let e of this._headers_map) yield e;
    }
    has(e) {
      return this._headers_map.has(e);
    }
    get(e) {
      return this._headers_map.get(e) ?? null;
    }
    set(e, t) {
      this._headers_map.set(e, String(t));
    }
    append(e, t) {
      let r = this.has(e) ? `${this.get(e)}, ${t}` : t;
      this.set(e, r);
    }
    delete(e) {
      this.has(e) && this._headers_map.delete(e);
    }
    forEach(e, t) {
      for (let [r, o] of this.entries()) e.call(t, o, r, this);
    }
  };
var W = class n extends $ {
    get aborted() {
      return this._aborted;
    }
    get reason() {
      return this._reason;
    }
    constructor() {
      super(), this._aborted = !1;
    }
    get [Symbol.toStringTag]() {
      return '[object AbortSignal]';
    }
    dispatchEvent(e) {
      e.type === 'abort'
      && (this._aborted = !0,
        this._reason = e.reason,
        typeof this.onabort == 'function' && this.onabort.call(this, e)),
        super.emit(e.type, e);
    }
    addEventListener(e, t) {
      super.addListener(e, t);
    }
    static __create() {
      return new n();
    }
  },
  Ue = class {
    get signal() {
      return this._signal;
    }
    constructor() {
      this._signal = W.__create();
    }
    abort(e) {
      let t = e;
      t === void 0
        && (t = new Error('This operation was aborted'), t.name = 'AbortError');
      let r = { type: 'abort', reason: t };
      this.signal.dispatchEvent(r);
    }
    get [Symbol.toStringTag]() {
      return '[object AbortController]';
    }
  };
function Re(n) {
  return class xe extends D {
    get url() {
      return this._url;
    }
    get headers() {
      return this._headers;
    }
    get method() {
      return this._method;
    }
    get signal() {
      return this._signal;
    }
    get lynxExtension() {
      return this._lynxExtension;
    }
    constructor(t, r) {
      if (super(), r = r || {}, t instanceof xe) {
        if (t.bodyUsed) throw new TypeError('Already read');
        this._url = t.url,
          r.headers || (this._headers = new Q(t.headers)),
          this._method = t.method,
          this._signal = t.signal;
      } else this._url = String(t);
      if (
        (r.headers || !this.headers) && (this._headers = new Q(r.headers)),
          this._method = r.method || this.method || 'GET',
          this._method = this._method.toUpperCase(),
          (this.method === 'GET' || this.method === 'HEAD') && r.body
      ) throw new TypeError('Body not allowed for GET or HEAD requests');
      typeof r.signal < 'u' && (this._signal = r.signal),
        this._signal = this._signal || W.__create(),
        this._lynxExtension = r.lynxExtension || {},
        this._headers.get('Content-Type')
        || (typeof r.body == 'string'
          ? this._headers.set('Content-Type', 'text/plain;charset=UTF-8')
          : (globalThis.URLSearchParams && r.body instanceof URLSearchParams
            ? this._headers.set(
              'Content-Type',
              'application/x-www-form-urlencoded;charset=UTF-8',
            )
            : r.body instanceof ArrayBuffer
              || this._headers.set(
                'Content-Type',
                'text/plain;charset=UTF-8',
              ))),
        this.setBody(r.body);
    }
    clone() {
      let t = new xe(this, { method: this.method });
      return t.setBody(this), t;
    }
  };
}
function Se(n) {
  return class ke extends D {
    get url() {
      return this._url;
    }
    get status() {
      return this._status;
    }
    get statusText() {
      return this._statusText;
    }
    get ok() {
      return this._ok;
    }
    get headers() {
      return this._headers;
    }
    get lynxExtension() {
      return this._lynxExtension;
    }
    constructor(t, r) {
      if (
        super(),
          r = r || {},
          this._status = r.status === void 0 ? 200 : r.status,
          this._status < 200 || this._status > 599
      ) {
        throw new RangeError(
          'Failed to construct \'Response\': The status provided (0) is outside the range [200, 599].',
        );
      }
      this._ok = this._status >= 200 && this._status < 300,
        this._statusText = r.statusText === void 0 ? '' : '' + r.statusText,
        this._headers = new Headers(r.headers),
        this._url = r.url || '',
        this._lynxExtension = r.lynxExtension || {},
        this.setBody(t);
    }
    clone() {
      let t = new ke(null, {
        status: this._status,
        statusText: this._statusText,
        headers: new Headers(this._headers),
        url: this._url,
      });
      return t.setBody(this), t;
    }
  };
}
function Fe(n) {
  return /^(?:(?:https?|ftp):)?\/\/(?:(?:[1-9]\d?|1\d\d|2[01]\d|22[0-3])(?:\.(?:1?\d{1,2}|2[0-4]\d|25[0-5])){2}\.(?:[1-9]\d?|1\d\d|2[0-4]\d|25[0-4])|(?:(?:[a-z0-9\u00a1-\uffff][a-z0-9\u00a1-\uffff_-]{0,62})?[a-z0-9\u00a1-\uffff]\.)*[a-z\u00a1-\uffff]{2,}\.?)(?::\d{2,5})?(?:[/?#]\S*)?$/
    .test(n);
}
var Be = class {
  _url;
  _searchParamsInstance = null;
  constructor(e, t) {
    let r = null;
    if (!t || Fe(e)) {
      this._url = e, this._url.endsWith('/') || (this._url += '/');
    } else {
      if (typeof t == 'string') {
        if (r = t, !Fe(r)) throw new TypeError(`Invalid base URL: ${r}`);
      } else r = t.toString();
      r.endsWith('/') && (r = r.slice(0, r.length - 1)),
        e.startsWith('/') || (e = `/${e}`),
        r.endsWith(e) && (e = ''),
        this._url = `${r}${e}`;
    }
  }
  get href() {
    return this.toString();
  }
  get searchParams() {
    return this._searchParamsInstance == null
      && (this._searchParamsInstance = new URLSearchParams()),
      this._searchParamsInstance;
  }
  toJSON() {
    return this.toString();
  }
  toString() {
    if (this._searchParamsInstance === null) return this._url;
    let e = this._searchParamsInstance.toString(),
      t = this._url.indexOf('?') > -1 ? '&' : '?';
    return this._url + t + e;
  }
};
function To(n) {
  'use strict';
  let e = '__URLSearchParams__';
  function t(s) {
    s = s || '',
      s instanceof URLSearchParams && (s = s.toString()),
      this[e] = a(s);
  }
  let r = t.prototype;
  r.append = function(s, p) {
    d(this[e], s, p);
  },
    r.delete = function(s) {
      delete this[e][s];
    },
    r.get = function(s) {
      var p = this[e];
      return this.has(s) ? p[s][0] : null;
    },
    r.getAll = function(s) {
      var p = this[e];
      return this.has(s) ? p[s].slice(0) : [];
    },
    r.has = function(s) {
      return C(this[e], s);
    },
    r.set = function(p, u) {
      this[e][p] = ['' + u];
    },
    r.toString = function() {
      var s = this[e], p = [], u, _, h, v;
      for (_ in s) {
        for (h = o(_), u = 0, v = s[_]; u < v.length; u++) {
          p.push(h + '=' + o(v[u]));
        }
      }
      return p.join('&');
    },
    r.polyfill = !0,
    r[Symbol.toStringTag] = 'URLSearchParams',
    r.forEach = function(s, p) {
      var u = a(this.toString());
      Object.getOwnPropertyNames(u).forEach(function(_) {
        u[_].forEach(function(h) {
          s.call(p, h, _, this);
        }, this);
      }, this);
    },
    r.sort = function() {
      var s = a(this.toString()), p = [], u, _, h;
      for (u in s) p.push(u);
      for (p.sort(), _ = 0; _ < p.length; _++) this.delete(p[_]);
      for (_ = 0; _ < p.length; _++) {
        var v = p[_], O = s[v];
        for (h = 0; h < O.length; h++) this.append(v, O[h]);
      }
    },
    r.keys = function() {
      var s = [];
      return this.forEach(function(p, u) {
        s.push(u);
      }),
        l(s);
    },
    r.values = function() {
      var s = [];
      return this.forEach(function(p) {
        s.push(p);
      }),
        l(s);
    },
    r.entries = function() {
      var s = [];
      return this.forEach(function(p, u) {
        s.push([u, p]);
      }),
        l(s);
    },
    r[Symbol.iterator] = r.entries,
    Object.defineProperty(r, 'size', {
      get: function() {
        var s = a(this.toString());
        if (r === this) {
          throw new TypeError(
            'Illegal invocation at URLSearchParams.invokeGetter',
          );
        }
        return Object.keys(s).reduce(function(p, u) {
          return p + s[u].length;
        }, 0);
      },
    });
  function o(s) {
    var p = {
      '!': '%21',
      '\'': '%27',
      '(': '%28',
      ')': '%29',
      '~': '%7E',
      '%20': '+',
      '%00': '\0',
    };
    return encodeURIComponent(s).replace(/[!'()~]|%20|%00/g, function(u) {
      return p[u];
    });
  }
  function i(s) {
    return s.replace(/[ +]/g, '%20').replace(/(%[a-f0-9]{2})+/gi, function(p) {
      return decodeURIComponent(p);
    });
  }
  function l(s) {
    var p = {
      next: function() {
        var u = s.shift();
        return { done: u === void 0, value: u };
      },
    };
    return iterable && (p[Symbol.iterator] = function() {
      return p;
    }),
      p;
  }
  function a(s) {
    var p = {};
    if (typeof s == 'object') {
      if (m(s)) {
        for (var u = 0; u < s.length; u++) {
          var _ = s[u];
          if (m(_) && _.length === 2) d(p, _[0], _[1]);
          else {throw new TypeError(
              'Failed to construct \'URLSearchParams\': Sequence initializer must only contain pair elements',
            );}
        }
      } else for (var h in s) s.hasOwnProperty(h) && d(p, h, s[h]);
    } else {
      s.indexOf('?') === 0 && (s = s.slice(1));
      for (var v = s.split('&'), O = 0; O < v.length; O++) {
        var B = v[O], de = B.indexOf('=');
        -1 < de
          ? d(p, i(B.slice(0, de)), i(B.slice(de + 1)))
          : B && d(p, i(B), '');
      }
    }
    return p;
  }
  function d(s, p, u) {
    var _ = typeof u == 'string'
      ? u
      : (u != null && typeof u.toString == 'function'
        ? u.toString()
        : JSON.stringify(u));
    C(s, p) ? s[p].push(_) : s[p] = [_];
  }
  function m(s) {
    return !!s && Object.prototype.toString.call(s) === '[object Array]';
  }
  function C(s, p) {
    return Object.prototype.hasOwnProperty.call(s, p);
  }
  n.URLSearchParams = n.URLSearchParams ?? t;
}
var g = class _BaseApp {
  constructor(n, e) {
    this.dataTypeSet = new Set([
      'string',
      'number',
      'array',
      'object',
      'boolean',
      'null',
      'function',
    ]);
    this.setSourceMapRelease = n => {
      this.Reporter.setSourceMapRelease(n);
    };
    this.getSourceMapRelease = n => this.Reporter.getSourceMapRelease(n);
    this.setupGetTextInfoApi = () => {
      this._apiList.getTextInfo = (n, e) =>
        this._textInfoManager.getTextInfo(n, e);
    };
    this.setupExposureApi = () => {
      this._apiList.resumeExposure = () => {
        this._exposureManager.resumeExposure();
      },
        this._apiList.stopExposure = n => {
          this._exposureManager.stopExposure(n || { sendEvent: !0 });
        },
        this._apiList.setObserverFrameRate = n => {
          this._exposureManager.setObserverFrameRate(
            n || { forPageRect: 20, forExposureCheck: 20 },
          );
        };
    };
    this.requestAnimationFrame = n => this._nativeApp.requestAnimationFrame(n);
    this.cancelAnimationFrame = n => this._nativeApp.cancelAnimationFrame(n);
    this.initBase(n),
      e
        ? e.transferSingletonData(
          this,
          this.__internal__callNativeModule.bind(this),
        )
        : this.initExtra(n);
  }
  initExtra(n) {
    let { lynx: e } = n;
    this.modules = {},
      this._lazyCallableModules = new Map(),
      this._nativeApp = T.create(this._nativeApp),
      this.sharedConsole = X(`runtimeId:${this.nativeAppId}`),
      this.dynamicComponentExports = {},
      this.loadedDynamicComponentsSet = new Set(),
      this._lazyCallableModules = new Map(),
      this.Reporter = new V(() => this, () => this.nativeApp),
      this.GlobalEventEmitter = new $(
        this.__internal__callNativeModule.bind(this),
      ),
      this._intersectionObserverManager = new se(this.NativeModules),
      this._exposureManager = new ie(this.NativeModules),
      this.setupExposureApi(),
      this._aopManager = new ne(),
      this.beforePublishEvent = this._aopManager._beforePublishEvent,
      this.performance = new ve(this.GlobalEventEmitter, this.nativeApp);
    let t = this.setupPromise(
      this.nativeApp.setTimeout,
      this.nativeApp.clearTimeout,
    );
    this.lynx = this.createLynx(e, t),
      this.setupJSModule(),
      this.setupIntersectionApi(),
      this.setupFetchAPI(t);
  }
  initBase(n) {
    let { nativeApp: e, params: t } = n;
    this.nativeAppId = e.id,
      this._params = t,
      this._nativeApp = e,
      this.NativeModules = e.nativeModuleProxy,
      this.LynxUIMethodModule = e.nativeModuleProxy.LynxUIMethodModule,
      this.LynxTestModule = e.nativeModuleProxy.LynxTestModule,
      this.LynxResourceModule = e.nativeModuleProxy.LynxResourceModule,
      this.LynxAccessibilityModule =
        e.nativeModuleProxy.LynxAccessibilityModule,
      this.setTimeout = e.setTimeout,
      this.setInterval = e.setInterval,
      this.clearInterval = e.clearInterval,
      this.clearTimeout = e.clearTimeout,
      this._apiList = {},
      this._textInfoManager = new oe(this.NativeModules),
      this.setupGetTextInfoApi();
  }
  static {
    this.kDefaultSourceMapURL = 'default';
  }
  static {
    this.kGetSourceMapReleaseErrorName = Pe;
  }
  set __sourcemap__release__(n) {
    let e = new Error();
    e.name = 'LynxGetSourceMapReleaseError',
      e.message = n,
      e.stack = `at <anonymous> (${_BaseApp.kDefaultSourceMapURL}:1:1)`,
      this.setSourceMapRelease(e);
  }
  destroy() {
    this._nativeApp = null,
      this._params = null,
      this._lazyCallableModules = null,
      this.GlobalEventEmitter = null;
  }
  registerModule(n, e) {
    this._lazyCallableModules[n] = e;
  }
  getJSModule(n) {
    return this._lazyCallableModules[n];
  }
  setupJSModule() {
    this.registerModule('GlobalEventEmitter', this.GlobalEventEmitter),
      this.registerModule('Reporter', this.Reporter);
  }
  setupFetchAPI(n) {
    this._createResponseClass = Se,
      this._createRequestClass = Re,
      this._RequestClass = c.Request ?? Re(n),
      this._ResponseClass = c.Response ?? Se(n),
      c.Request || (c.Request = this._RequestClass),
      c.Response || (c.Response = this._ResponseClass);
  }
  __internal__callNativeModule(n, e, t) {
    let r = this.nativeApp.nativeModuleProxy[n];
    if (r) {
      let o = r[e];
      o && Function.prototype.apply.call(o, void 0, t);
    }
  }
  get nativeApp() {
    return this._nativeApp;
  }
  set nativeApp(n) {
    this._nativeApp = n;
  }
  get params() {
    return this._params;
  }
  set apiList(n) {
    this._apiList = { ...this._apiList, ...n };
  }
  setupIntersectionApi() {
    let n = this;
    this._apiList.createIntersectionObserver = function(e, t) {
      let { componentId: r = '' } = e;
      return n._intersectionObserverManager.createIntersectionObserver(r, t);
    },
      this.lynx.createIntersectionObserver =
        this._apiList.createIntersectionObserver;
  }
  onIntersectionObserverEvent(n, e, t) {
    let r = this._intersectionObserverManager.getObserver(n);
    r && r.invokeCallback(e, t);
  }
  reportError(n) {
    return this.lynx.reportError(n);
  }
  handleError(n, e, t) {
    E(n, this.nativeApp, {
      originError: e,
      getSourceMapRelease: this.getSourceMapRelease,
      errorLevel: t,
    });
  }
  handleUserError(n, e, t, r) {
    let { message: o, name: i, stack: l } = n || {};
    o || ({ message: o, name: i, stack: l } = new Error(JSON.stringify(n)));
    let a = new x(r ? `${r} ${i}: ${o}` : `${i}: ${o}`, l);
    a.cause = e, this.handleError(a, n, t);
  }
  handleInternalError(n, e) {
    let { message: t, name: r, stack: o } = n || {};
    t || ({ message: t, name: r, stack: o } = new Error(JSON.stringify(n)));
    let i = new R(`${r}: ${t}`, o);
    i.cause = e, this.handleError(i, n);
  }
  getBoolEnv(n) {
    return this.nativeApp.getEnv(n)?.toLowerCase() === 'true';
  }
  static {
    this._$factoryCache = {};
  }
  _$executeInit(n, { path: e, entryName: t }) {
    let r;
    if (n && n.init) r = n.init.bind(n);
    else if (c.initBundle) {
      r = c.initBundle.bind(c.initBundle), delete c.initBundle;
    } else throw new x(`load failed. path:${e},entryName:${t}`);
    try {
      nativeConsole.profile(`running ${e} init`);
      let o = r({ tt: this });
      return _BaseApp._$factoryCache[e] = r, o;
    } finally {
      nativeConsole.profileEnd();
    }
  }
  _$executeJSON(n, { path: e }) {
    let t = JSON.parse(n), r = () => t;
    return _BaseApp._$factoryCache[e] = r, t;
  }
  requireModule(n, e) {
    let t = _BaseApp._$factoryCache[n];
    if (t) return this._$executeInit({ init: t }, { path: n, entryName: e });
    if (n.split('?')[0].endsWith('.json')) {
      let o = this.nativeApp.readScript(n, { dynamicComponentEntry: e ?? S });
      return this._$executeJSON(o, { path: n, entryName: e });
    }
    let r = this.nativeApp.loadScript(n, e);
    return this._$executeInit(r, { path: n, entryName: e });
  }
  requireModuleAsync(n, e) {
    let t = _BaseApp._$factoryCache[n];
    if (t) {
      e(null, this._$executeInit({ init: t }, { path: n }));
      return;
    }
    if (n.split('?')[0].endsWith('.json')) {
      let o = this.nativeApp.readScript(n),
        i = this._$executeJSON(o, { path: n });
      e(null, i);
      return;
    }
    let r = new Error();
    this.nativeApp.loadScriptAsync(n, (o, i) => {
      if (o) return r.message = o, e(r);
      try {
        return e(null, this._$executeInit(i, { path: n }));
      } catch (l) {
        return e(l);
      }
    });
  }
  require(path, params) {
    let that = this;
    if (typeof path != 'string') {
      throw new Error('require args must be a string');
    }
    let entryName = params && params.dynamicComponentEntry
      ? params.dynamicComponentEntry
      : S;
    that.modules[entryName] || (that.modules[entryName] = {});
    let module = that.modules[entryName][path];
    if (!module) {
      try {
        let tt = that,
          jsContent = that._nativeApp.readScript(path, {
            dynamicComponentEntry: entryName,
          });
        eval(jsContent), module = that.modules[entryName][path];
      } catch (n) {
        this.handleError(
          new x(
            `eval user: ${that._nativeApp.id} error: ${n.message}`,
            n.stack,
          ),
          n,
        );
      }
      if (!that.modules[entryName][path]) {
        throw new Error(
          `module ${path} in ${entryName} is not defined in card: ${that._nativeApp.id}`,
        );
      }
    }
    if (!module.hasRun) {
      let { factory: n } = module, e = { exports: {} }, t;
      if (
        module.hasRun = !0, module.exports = e.exports, typeof n == 'function'
      ) {
        let r = rt.call(that, path), o = that;
        t = n(
          r,
          e,
          e.exports,
          that.Card.bind(o),
          that.setTimeout,
          that.setInterval,
          that.clearInterval,
          that.clearTimeout,
          that.NativeModules,
          that._apiList,
          that.sharedConsole,
          that.Component.bind(o),
          params?.ReactLynx,
          that.nativeAppId,
          that.Behavior.bind(o),
          De,
          that.lynx,
          void 0,
          void 0,
          void 0,
          void 0,
          void 0,
          void 0,
          void 0,
          void 0,
          void 0,
          void 0,
          void 0,
          void 0,
          void 0,
          that.lynx.fetch,
          void 0,
          void 0,
          void 0,
          void 0,
          void 0,
          void 0,
          that.requestAnimationFrame,
          that.cancelAnimationFrame,
        ), module.exports = e.exports || t;
      }
    }
    return module.exports;
  }
  define(n, e, t) {
    t = t || S,
      this.modules[t] || (this.modules[t] = {}),
      this.modules[t][n] = { hasRun: !1, factory: e.bind(this) };
  }
  callFunction(n, e, t) {
    try {
      let r = this.getJSModule(n);
      typeof r[e] == 'function' && r[e].apply(r, t);
    } catch (r) {
      this.handleUserError(r, { by: `${n}.${e}` });
    }
  }
  saveDynamicComponentExports(n, e) {
    this.dynamicComponentExports[n] = e;
  }
  getDynamicComponentExports(n) {
    return this.dynamicComponentExports[n];
  }
  Component(...n) {}
  Card(...n) {}
  Behavior(...n) {}
  wrapReport(n, e) {
    let t = this;
    function r(o) {
      return function(...l) {
        try {
          return o.apply(this, l);
        } catch (a) {
          t.handleUserError(a, { by: e });
        }
      };
    }
    return function(i, ...l) {
      return Function.prototype.apply.call(n, void 0, [r(i), ...l]);
    };
  }
  setupPromise(n, e) {
    let t = we(n, (r, o) => {
      try {
        o
          && (o.stack || (o = new Error(JSON.stringify(o))),
            o.name = 'unhandled rejection',
            this.handleUserError(o));
      } catch {}
    }, e);
    return this.resolvedPromise = t.resolve(), t;
  }
};
function et(n) {
  let e = n.match(/(.*)\/([^/]+)?$/);
  return e?.[1] ? e[1] : './';
}
function rt(n) {
  let e = this, t = et(n);
  return function(r) {
    let o = [], i = `${t}/${r}`.split('/'), l = i.length;
    if (typeof r != 'string') throw new Error('require args must be a string');
    for (let d = 0; d < l; ++d) {
      let m = i[d];
      if (m !== '' && m !== '.') {
        if (m === '..') {
          if (o.length === 0) {
            throw new Error(
              `can't find module ${r} in app: ${e._nativeApp.id}`,
            );
          }
          o.pop();
        } else d + 1 < l && i[d + 1] === '..' ? d++ : o.push(m);
      }
    }
    let a = o.join('/');
    return a.endsWith('.js') || (a += '.js'), e.require(a);
  };
}
var nt = (n => {})(nt || {});
var qe =
    (o => (o[o.NotCanceled = 0] = 'NotCanceled',
      o[o.CanceledByEventHandler = 1] = 'CanceledByEventHandler',
      o[o.CanceledByDefaultEventHandler = 2] = 'CanceledByDefaultEventHandler',
      o[o.CanceledBeforeDispatch = 3] = 'CanceledBeforeDispatch',
      o))(qe || {}),
  ot =
    (o => (o[o.CoreContext = 0] = 'CoreContext',
      o[o.DevTool = 1] = 'DevTool',
      o[o.JSContext = 2] = 'JSContext',
      o[o.UIContext = 3] = 'UIContext',
      o))(ot || {}),
  je =
    (o => (o.EVENT_SET_SESSION_STORAGE = '__SetSessionStorageItem',
      o.EVENT_GET_SESSION_STORAGE = '__GetSessionStorageItem',
      o.EVENT_SUBSCRIBE_SESSION_STORAGE = '__SubscribeSessionStorage',
      o.EVENT_UNSUBSCRIBE_SESSION_STORAGE = '__UnSubscribeSessionStorage',
      o))(je || {});
var it =
    (i => (i[i.START = 0] = 'START',
      i[i.PLAY = 1] = 'PLAY',
      i[i.PAUSE = 2] = 'PAUSE',
      i[i.CANCEL = 3] = 'CANCEL',
      i[i.FINISH = 4] = 'FINISH',
      i))(it || {}),
  le = class n {
    static {
      this.count = 0;
    }
    constructor(e) {
      this.effect = e, this.id = '__lynx-inner-js-animation-' + n.count++;
    }
    cancel() {
      this.effect.target.cancelAnimate(this);
    }
    pause() {
      this.effect.target.pauseAnimate(this);
    }
    play() {
      this.effect.target.playAnimate(this);
    }
  };
var pe = class {
  constructor(e, t, r) {
    this.target = e, this.keyframes = t, this.options = r;
  }
};
var J = class {
  constructor(e, t, r) {
    this._root = e,
      this._idSelector = '#' + t,
      this._lynx = r,
      this._element = void 0;
  }
  ensureElement() {
    this._element
      || (this._element = this._lynx.createElement(
        this._root,
        this._idSelector,
      ));
  }
  animate(e, t) {
    this.ensureElement();
    let r = new le(new pe(this, e, t));
    return this._element.animate(0, r.id, e, t), r;
  }
  playAnimate(e) {
    this._element.animate(1, e.id, void 0, void 0);
  }
  pauseAnimate(e) {
    this._element.animate(2, e.id, void 0, void 0);
  }
  cancelAnimate(e) {
    this._element.animate(3, e.id, void 0, void 0);
  }
  finishAnimate(e) {
    this._element.animate(4, e.id, void 0, void 0);
  }
  setProperty(e, t) {
    if (this.ensureElement(), typeof e == 'string' && typeof t == 'string') {
      this._element.setProperty({ [e]: t });
    } else if (typeof e == 'object') this._element.setProperty(e);
    else {throw new Error(
        `setProperty's param must be string or object. While current type is ${typeof e} and ${typeof t}.`,
      );}
  }
};
var be = J;
var Ve =
    (r => (r[r.ID_SELECTOR = 0] = 'ID_SELECTOR',
      r[r.REF_ID = 1] = 'REF_ID',
      r[r.UNIQUE_ID = 2] = 'UNIQUE_ID',
      r))(Ve || {}),
  Ne =
    (a => (a[a.SUCCESS = 0] = 'SUCCESS',
      a[a.UNKNOWN = 1] = 'UNKNOWN',
      a[a.NODE_NOT_FOUND = 2] = 'NODE_NOT_FOUND',
      a[a.METHOD_NOT_FOUND = 3] = 'METHOD_NOT_FOUND',
      a[a.PARAM_INVALID = 4] = 'PARAM_INVALID',
      a[a.SELECTOR_NOT_SUPPORTED = 5] = 'SELECTOR_NOT_SUPPORTED',
      a[a.NO_UI_FOR_NODE = 6] = 'NO_UI_FOR_NODE',
      a))(Ne || {});
var M = class n {
    constructor(e, t, r) {
      this._component = e,
        this._taskQueue = t,
        this._native_proxy = r,
        this._fire_immediately = !1,
        this._root_unique_id = void 0;
    }
    static fromQuery(e, t) {
      return new n(t ?? e._component, e._taskQueue.slice(), e._native_proxy);
    }
    static newEmptyQuery(e, t) {
      return new n(t ?? '', [], e);
    }
    commitTask(e) {
      let t = n.fromQuery(this, this._component);
      if (t._taskQueue.push(e), this._fire_immediately) {
        t.exec();
        return;
      }
      return t;
    }
    in(e) {
      return e.createSelectorQuery(this);
    }
    select(e) {
      return new w(this, {
        type: 0,
        identifier: e,
        component_id: this._component,
        root_unique_id: this._root_unique_id,
        first_only: !0,
      });
    }
    selectAll(e) {
      return new w(this, {
        type: 0,
        identifier: e,
        component_id: this._component,
        root_unique_id: this._root_unique_id,
        first_only: !1,
      });
    }
    selectReactRef(e) {
      if (this._taskQueue.length) {
        let t =
          'selectReactRef() should be called before any other selector query methods';
        nativeConsole.warn(t);
        let r = new Error(t);
        E(new te(t, r.stack), this._native_proxy.nativeApp);
        return;
      }
      return this._fire_immediately = !0,
        new w(this, {
          type: 1,
          identifier: e,
          component_id: this._component,
          root_unique_id: this._root_unique_id,
          first_only: !0,
        });
    }
    selectRoot() {
      return this.select('');
    }
    selectUniqueID(e) {
      return new w(this, {
        type: 2,
        identifier: e.toString(),
        component_id: this._component,
        root_unique_id: this._root_unique_id,
        first_only: !0,
      });
    }
    exec() {
      for (let e = 0; e < this._taskQueue.length; ++e) {
        this._taskQueue[e](this._native_proxy);
      }
    }
    setRoot(e) {
      return this._root_unique_id = Number(e), this;
    }
  },
  w = class {
    static {
      this.nodePool = {};
    }
    constructor(e, t) {
      this._nodeSelectToken = t, this._selectorQuery = e;
    }
    invoke(e) {
      let t,
        r = o => {
          let i = l => {
            l.code === 0 ? e.success && e.success(l.data) : e.fail && e.fail(l);
          };
          if (!this._nodeSelectToken.first_only) {
            i({ code: 5, data: 'selectAll not supported for invoke method' });
            return;
          }
          o.nativeApp.invokeUIMethod(
            this._nodeSelectToken.type,
            this._nodeSelectToken.identifier,
            this._nodeSelectToken.component_id,
            e.method,
            e.params ?? {},
            i,
            this._nodeSelectToken.root_unique_id,
          );
        };
      return this._selectorQuery.commitTask(r);
    }
    path(e) {
      let t = r => {
        let o = i => {
          e && e(i.data, i.status);
        };
        r.nativeApp.getPathInfo(
          this._nodeSelectToken.type,
          this._nodeSelectToken.identifier,
          this._nodeSelectToken.component_id,
          this._nodeSelectToken.first_only,
          o,
          this._nodeSelectToken.root_unique_id,
        );
      };
      return this._selectorQuery.commitTask(t);
    }
    fields(e, t) {
      let r = o => {
        let i = a => {
            if (e.query) {
              let d = m => {
                m.query = M.newEmptyQuery(o),
                  m.query.setRoot(m.unique_id.toString()),
                  e.unique_id || delete m.unique_id;
              };
              if (this._nodeSelectToken.first_only) {
                let m = a.data;
                m && d(m);
              } else for (let m of a.data) d(m);
            }
            t && t(a.data, a.status);
          },
          l = [];
        for (let a in e) {
          if (a == 'query' && e[a] == !0 && !e.unique_id) {
            l.push('unique_id');
            continue;
          }
          e[a] && l.push(a);
        }
        o.nativeApp.getFields(
          this._nodeSelectToken.type,
          this._nodeSelectToken.identifier,
          this._nodeSelectToken.component_id,
          this._nodeSelectToken.first_only,
          l,
          i,
          this._nodeSelectToken.root_unique_id,
        );
      };
      return this._selectorQuery.commitTask(r);
    }
    setNativeProps(e) {
      let t = r => {
        r.nativeApp.setNativeProps(
          this._nodeSelectToken.type,
          this._nodeSelectToken.identifier,
          this._nodeSelectToken.component_id,
          this._nodeSelectToken.first_only,
          e,
          this._nodeSelectToken.root_unique_id,
        );
      };
      return this._selectorQuery.commitTask(t);
    }
  };
var U = class n {
  constructor(e, t, r, o) {
    this.getNativeApp = e;
    this.getApp = t;
    this.Promise = r;
    this.getNativeLynx = o;
    this.setTimeout = this.getApp().wrapReport(
      this.getNativeApp().setTimeout,
      'setTimeout Error',
    );
    this.setInterval = this.getApp().wrapReport(
      this.getNativeApp().setInterval,
      'setInterval Error',
    );
    this.clearInterval = this.getNativeApp().clearInterval;
    this.clearTimeout = this.getNativeApp().clearTimeout;
    this.resumeExposure = this.getApp()._apiList.resumeExposure;
    this.requireModule = (e, t) => {
      if (this.requireModule.cache[e]) return this.requireModule.cache[e];
      let r = this.getApp().requireModule(e, t);
      return this.requireModule.cache[e] = r, r;
    };
    this.requireModuleAsync = (e, t) => {
      if (
        t ??= r => {
          r && this.getApp().handleUserError(r);
        }, this.requireModuleAsync.cache[e]
      ) {
        t(null, this.requireModuleAsync.cache[e]);
        return;
      }
      this.getApp().requireModuleAsync(e, (r, o) => {
        r || (this.requireModuleAsync.cache[e] = o), t(r, o);
      });
    };
    this.createElement = (e, t) => this.getNativeLynx().createElement(e, t);
    this.getElementById = e => new be('', e, this);
    this.reportError = (e, t) => {
      let r;
      if (K(e)) r = e;
      else {
        let l;
        typeof e == 'string' ? l = e : l = JSON.stringify(e), r = new Error(l);
      }
      let { level: o = 'error' } = t || {}, i = o === 'warning' ? 2 : 1;
      this.getApp().handleUserError(r, void 0, i);
    };
    this.registerModule = (e, t) => this.getApp().registerModule(e, t);
    this.getJSModule = e => this.getApp().getJSModule(e);
    this.getTextInfo = this.getApp()._apiList.getTextInfo;
    this.addFont = (e, t) => {
      if (!H(e)) throw new Error('The first argument must be object type');
      if (!P(e['font-family']) || !P(e.src)) {
        throw new Error('The font value must have font-family and src');
      }
      if (!q(t)) throw new Error('The second argument must be function type');
      this.getNativeLynx().addFont(e, t);
    };
    this.stopExposure = this.getApp()._apiList.stopExposure;
    this.setObserverFrameRate = this.getApp()._apiList.setObserverFrameRate;
    this.performance = this.getApp().performance;
    this.beforePublishEvent = this.getApp()._aopManager._beforePublishEvent;
    this.setSessionStorageItem = (e, t) => {
      this.dispatchSessionStorageEvent({
        type: '__SetSessionStorageItem',
        data: { key: e, value: t },
      });
    };
    this.getSessionStorageItem = (e, t) => {
      this.getNativeApp().getSessionStorageItem(e, t);
    };
    this.subscribeSessionStorage = (e, t) => {
      let r = n.__registerSharedDataCounter++;
      return this.getNativeApp().subscribeSessionStorage(e, r, t), r;
    };
    this.unsubscribeSessionStorage = (e, t) => {
      this.dispatchSessionStorageEvent({
        type: '__UnSubscribeSessionStorage',
        data: { key: e, listenerId: t },
      });
    };
    this.getDevtool = this.getNativeLynx().getDevtool;
    this.getCoreContext = this.getNativeLynx().getCoreContext;
    this.getJSContext = this.getNativeLynx().getJSContext;
    this.getUIContext = this.getNativeLynx().getUIContext;
    this.getCustomSectionSync = this.getNativeLynx().getCustomSectionSync;
    this.accessibilityAnnounce = this.getNativeApp().nativeModuleProxy
      .LynxAccessibilityModule?.accessibilityAnnounce;
    this.requestResourcePrefetch = this.getNativeApp().nativeModuleProxy
      .LynxResourceModule?.requestResourcePrefetch;
    this.cancelResourcePrefetch = this.getNativeApp().nativeModuleProxy
      .LynxResourceModule?.cancelResourcePrefetch;
    this.setSharedData = (e, t) => {
      c.sharedData[e] = t;
      let r = {};
      r[e] = t, c.shareDataSubject.notifyDataChange(r);
    };
    this.getSharedData = e => c.sharedData[e];
    this.registerSharedDataObserver = e =>
      c.shareDataSubject.registerObserver(e);
    this.removeSharedDataObserver = e => c.shareDataSubject.removeObserver(e);
    this.triggerLepusGlobalEvent = (e, t) =>
      this.getNativeApp().triggerLepusGlobalEvent(e, t);
    this.reload = (e, t) => {
      this.getNativeLynx().reload(e, t);
    };
    this.fetchDynamicComponent = (e, t, r, o) =>
      this.getNativeLynx().fetchDynamicComponent(e, t, r, o);
    this.QueryComponent = (e, t) => {
      let r = () => {
        t({
          code: 0,
          data: { url: e, sync: !0, error_message: '', mode: 'cache' },
          detail: { schema: e, cache: !1, errMsg: '' },
        });
      };
      if (this.getApp().loadedDynamicComponentsSet.has(e)) {
        r();
        return;
      }
      let o = i => {
        i.__hasReady === !0
          ? (c.loadDynamicComponent(this.getApp(), e), r())
          : t(i);
      };
      this.getNativeLynx().QueryComponent(e, o);
    };
    this.loadDynamicComponent = (e, t, r = {}) =>
      new this.Promise((o, i) => {
        let l = [], a;
        if (
          Array.isArray(e)
            ? (l = e, a = t)
            : (typeof t == 'string'
              ? (l = [e], a = t)
              : (a = e, r = t)), this.getApp().loadedDynamicComponentsSet.has(a)
        ) {
          o({
            code: 0,
            data: { url: a, sync: !1, error_message: '', mode: 'normal' },
            detail: { schema: a, cache: !1, errMsg: '' },
          });
          return;
        }
        this.getNativeLynx().fetchDynamicComponent(a, r, d => {
          d && d.code == 0 ? o(d) : i(d);
        }, l);
      });
    this.fetch = (e, t) =>
      new this.Promise((r, o) => {
        let i = new (this.getApp())._RequestClass(e, t), l = i.signal;
        if (l.aborted) return o(l.reason);
        l.addEventListener('abort', d => {
          o(l.reason);
        });
        let a = {
          method: i.method,
          url: i.url,
          origin: this.getNativeApp().__pageUrl,
          headers: Object.fromEntries(i.headers.entries()),
          body: i._bodyData.arrayBuffer,
          lynx: i.lynxExtension,
        };
        this.getApp().NativeModules.LynxFetchModule.fetch(a, d => {
          l.aborted || r(new (this.getApp())._ResponseClass(d.body, d));
        }, d => {
          l.aborted || o(new TypeError(d.message));
        });
      });
    this.createSelectorQuery = () =>
      M.newEmptyQuery({ nativeApp: this.getNativeApp(), lynx: this });
    this.requestAnimationFrame = e =>
      this.getNativeApp().requestAnimationFrame(e);
    this.cancelAnimationFrame = e =>
      this.getNativeApp().cancelAnimationFrame(e);
    this.__addReporterCustomInfo = e => {
      this.getNativeApp().__addReporterCustomInfo(e);
    };
    this.init(void 0);
  }
  static {
    this.__registerSharedDataCounter = 0;
  }
  rebind(e) {
    this.init(e);
  }
  init(e) {
    if (e) {
      this.getApp = e,
        this.__globalProps = this.getNativeLynx().__globalProps || {},
        this.__presetData = this.getNativeLynx().__presetData || {};
    } else {
      let t = {};
      this.requireModule.cache = t,
        this.requireModuleAsync.cache = t,
        this.__globalProps = this.getNativeLynx().__globalProps || {},
        this.__presetData = this.getNativeLynx().__presetData || {},
        this._switches = {};
    }
  }
  dispatchSessionStorageEvent(e) {
    var t = this.getCoreContext().dispatchEvent(e);
    t != 0 && this.getJSContext().dispatchEvent(e);
  }
};
var ce = class n {
  constructor(e, t, r, o, i) {
    this._selectorName = r,
      o && o.length > 0
        ? this._ancestorSelectorNames = [...o]
        : this._ancestorSelectorNames = [],
      this._rootComponentId = t,
      this._proxy = e,
      this._isCallByRefId = i;
  }
  getNodeRef(e) {
    return new n(this._proxy, this._rootComponentId, e, [
      ...this._ancestorSelectorNames,
      this._selectorName,
    ], this._isCallByRefId);
  }
  invoke(e) {
    let t;
    this._proxy.nativeLynxUIModule.invokeUIMethod(
      this._rootComponentId,
      [...this._ancestorSelectorNames, this._selectorName],
      e.method,
      Object.assign({ _isCallByRefId: this._isCallByRefId }, e.params),
      r => {
        r.code === 0 ? e.success && e.success(r.data) : e.fail && e.fail(r);
      },
    );
  }
  scrollIntoView(e = !0) {
    let t = {};
    if (typeof e == 'boolean') {
      e
        ? t = { behavior: 'auto', block: 'start', inline: 'nearest' }
        : t = { behavior: 'auto', block: 'end', inline: 'nearest' };
    } else if (typeof e == 'object') t = e;
    else throw new Error('scrollIntoView only support boolean or object');
    this.invoke({
      method: 'scrollIntoView',
      params: { scrollIntoViewOptions: t },
      fail(r) {
        nativeConsole.error(
          'NodeRef.scrollIntoView failed',
          `ErrorCode: ${r.code}`,
        );
      },
    });
  }
};
var k = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',
  Y = new Uint8Array(256);
for (let n = 0; n < k.length; n++) Y[k.charCodeAt(n)] = n;
function os(n) {
  var e = new Uint8Array(n), t, r = e.length, o = '';
  for (t = 0; t < r; t += 3) {
    o += k[e[t] >> 2],
      o += k[(e[t] & 3) << 4 | e[t + 1] >> 4],
      o += k[(e[t + 1] & 15) << 2 | e[t + 2] >> 6],
      o += k[e[t + 2] & 63];
  }
  return r % 3 === 2
    ? o = o.substring(0, o.length - 1) + '='
    : r % 3 === 1 && (o = o.substring(0, o.length - 2) + '=='),
    o;
}
function is(n) {
  let e = n.length * .75, t = n.length, r, o = 0, i, l, a, d;
  n[n.length - 1] === '=' && (e--, n[n.length - 2] === '=' && e--);
  let m = new ArrayBuffer(e), C = new Uint8Array(m);
  for (r = 0; r < t; r += 4) {
    i = Y[n.charCodeAt(r)],
      l = Y[n.charCodeAt(r + 1)],
      a = Y[n.charCodeAt(r + 2)],
      d = Y[n.charCodeAt(r + 3)],
      C[o++] = i << 2 | l >> 4,
      C[o++] = (l & 15) << 4 | a >> 2,
      C[o++] = (a & 3) << 6 | d & 63;
  }
  return m;
}
var Te = class {
    transferSingletonData(e, t) {
      e.nativeApp = this.nativeApp,
        e.sharedConsole = this.sharedConsole,
        e.dynamicComponentExports = this.dynamicComponentExports,
        e.loadedDynamicComponentsSet = this.loadedDynamicComponentsSet,
        e._intersectionObserverManager = this.intersectionObserverManager,
        e._exposureManager = this.exposureManager,
        e._textInfoManager = this.textInfoManager,
        this.globalEventEmitter.setCallNativeModule(t),
        e.GlobalEventEmitter = this.globalEventEmitter,
        e._aopManager = this.aopManager,
        e.performance = this.performance,
        e.modules = this.modules,
        e._lazyCallableModules = this.lazyCallableModules,
        e.lynx = this.lynx,
        this.lynx.rebind(() => e),
        e._apiList = this.apiList,
        this.Reporter.rebind(() => e),
        e.resolvedPromise = this.resolvedPromise;
    }
  },
  F = class extends g {
    constructor(e, t) {
      super(e, void 0), this.fillSingletonData();
      try {
        t.srcName
          && (delete this.lynx.requireModule.cache[t.srcName],
            delete g._$factoryCache[t.srcName],
            this.lynx.requireModule(t.srcName, S),
            this.dataTypeSet.add('undefined'));
      } catch (r) {
        this.handleUserError(r);
      }
    }
    createLynx(e, t) {
      let r = T.create(e);
      return new U(() => this.nativeApp, () => this, t, () => r);
    }
    fillSingletonData() {
      this.singletonData = new Te(),
        this.singletonData.nativeApp = this._nativeApp,
        this.singletonData.sharedConsole = this.sharedConsole,
        this.singletonData.dynamicComponentExports =
          this.dynamicComponentExports,
        this.singletonData.loadedDynamicComponentsSet =
          this.loadedDynamicComponentsSet,
        this.singletonData.intersectionObserverManager =
          this._intersectionObserverManager,
        this.singletonData.exposureManager = this._exposureManager,
        this.singletonData.textInfoManager = this._textInfoManager,
        this.singletonData.globalEventEmitter = this.GlobalEventEmitter,
        this.singletonData.aopManager = this._aopManager,
        this.singletonData.performance = this.performance,
        this.singletonData.modules = this.modules,
        this.singletonData.lazyCallableModules = this._lazyCallableModules,
        this.singletonData.lynx = this.lynx,
        this.singletonData.apiList = this._apiList,
        this.singletonData.Reporter = this.Reporter,
        this.singletonData.resolvedPromise = this.resolvedPromise;
    }
  };
var ue = class extends g {
  createLynx(e, t) {
    let r = T.create(e);
    return new U(() => this.nativeApp, () => this, t, () => r);
  }
};
function ks(nativeApp, params, lynx) {
  let { id } = nativeApp, { cardType } = params;
  I(`load card native app id: ${id}`);
  let loadSuccess = !0, tt;
  try {
    if (
      cardType == 'standalone'
        ? tt = new F({ nativeApp, params, lynx }, params)
        : tt = new ue({ nativeApp, params, lynx }),
        c.currentAppId = id,
        c.multiApps[id] = tt,
        cardType === 'standalone'
    ) return nativeApp.setCard(tt), !0;
    if (
      I(`load card native app load app-service.js params.bundleSupportLoadScript ${params.bundleSupportLoadScript}`),
        loadSuccess = !0,
        tt.lynx.requireModuleAsync(j, (n, e) => {
          n
            ? tt.handleUserError(n)
            : tt.lynx._switches.allowUndefinedInNativeDataTypeSet
              && tt.dataTypeSet.add('undefined'), nativeApp.setCard(tt);
        }),
        0
    ) {
      try {
      } catch (n) {}
    }
  } catch (n) {
    st(nativeApp, n), loadSuccess = !1;
  }
  return loadSuccess;
}
function Fs(n) {
  I(`destroy ${n}`), c.multiApps[n].destroy(), delete c.multiApps[n];
}
function Bs(n) {
  I(`callDestroyLifetimeFun ${n}`), c.multiApps[n].callDestroyLifetimeFun();
}
function qs(n, e) {
  if (n.loadedDynamicComponentsSet.has(e)) {
    return n.getDynamicComponentExports(e);
  }
  let t = c.globDynamicComponentEntry;
  c.globDynamicComponentEntry = e;
  try {
    delete n.lynx.requireModule.cache[j], delete g._$factoryCache[j];
    let r = n.lynx.requireModule(j, e);
    return n.saveDynamicComponentExports(e, r),
      n.loadedDynamicComponentsSet.add(e),
      r;
  } catch (r) {
    n.handleUserError(r);
  } finally {
    c.globDynamicComponentEntry = t;
  }
}
function st(n, e, t) {
  let { message: r, name: o, stack: i } = e || {};
  r || ({ message: r, name: o, stack: i } = new Error(JSON.stringify(e)));
  let l = new R(`loadCard failed ${o}: ${r}`, i);
  l.cause = t,
    E(l, n, {
      originError: e,
      getSourceMapRelease: a => {
        if (!n.__GetSourceMapRelease(a)) {
          return n.__GetSourceMapRelease(g.kDefaultSourceMapURL);
        }
      },
    });
}
export {
  j as APP_SERVICE_NAME,
  Ue as AbortController,
  W as AbortSignal,
  le as Animation,
  it as AnimationOperation,
  ne as AopManager,
  Ce as AppServiceEngineKnownError,
  g as BaseApp,
  Te as BaseAppSingletonData,
  z as BaseError,
  ge as BeforePublishEvent,
  D as BodyMixin,
  T as CachedFunctionProxy,
  ot as ContextProxyType,
  S as DEFAULT_ENTRY,
  qe as DispatchEventResult,
  Xr as E_COMPONENT_API_DEPRECATED,
  an as E_COMPONENT_CUSTOM,
  sn as E_COMPONENT_IMAGE_UNSUPPORTED_PROP,
  en as E_COMPONENT_LIST_CELL_NOT_FOUND,
  nn as E_COMPONENT_LIST_CHILD_COMPONENT_NOT_EXIST,
  Zr as E_COMPONENT_LIST_DUPLICATED_CELL,
  tn as E_COMPONENT_LIST_DYNAMIC_CHANGE_ORIENTATION,
  zr as E_COMPONENT_LIST_ILLEGAL_ITEM_KEY,
  rn as E_COMPONENT_LIST_INVALID_PROPS_ARG,
  on as E_COMPONENT_LIST_UNSUPPORTED_THREAD_STRATEGY,
  kr as E_CSS,
  hr as E_DATA_FLOW_UPDATE_EXCEPTION,
  _r as E_DATA_FLOW_UPDATE_INVALID_PROCESSOR,
  fr as E_DATA_FLOW_UPDATE_INVALID_TYPE,
  $r as E_DYNAMIC_COMPONENT_LOAD,
  Qr as E_DYNAMIC_COMPONENT_LOAD_DECODE_FAILED,
  Gr as E_DYNAMIC_COMPONENT_LOAD_EMPTY_FILE,
  Wr as E_DYNAMIC_COMPONENT_PRELOAD,
  yr as E_ELEMENT_API_ERROR,
  gr as E_ELEMENT_API_FATAL,
  Er as E_ELEMENT_UPDATE_NODE_IS_NULL,
  Pr as E_EVENT_EXCEPTION,
  pn as E_EXCEPTION_JNI,
  ln as E_EXCEPTION_PLATFORM,
  Ht as E_JS_PLATFORM_CALL_JS_FUNCTION_TOO_FREQUENCY,
  Yt as E_JS_RUNTIME_ERROR,
  br as E_LAYOUT_EXCEPTION,
  xr as E_LAYOUT_INITIALIZE,
  vr as E_LAYOUT_NODE_NULL,
  Rr as E_LAYOUT_PERF_CIRCULAR,
  Sr as E_LAYOUT_UPDATE_UI_NOT_FOUND,
  Kr as E_LEPUS_BRIDGE_MODULE_WRONG_PARAM,
  wr as E_LEPUS_RENDERER_FUNCTION_ERROR,
  Dr as E_LEPUS_RENDERER_FUNCTION_FATAL,
  Lr as E_LEPUS_RUNTIME_ERROR,
  Qt as E_MAIN_TEMPLATE_FETCH_ERROR_FROM_PROVIDER,
  Vt as E_MAIN_TEMPLATE_LOAD,
  $t as E_MAIN_TEMPLATE_LOAD_ENTRY_NOT_FOUND,
  Gt as E_MAIN_TEMPLATE_LOAD_EXCEPTION,
  Wt as E_MAIN_TEMPLATE_RELOAD,
  Jt as E_MAIN_TEMPLATE_VERIFY_INVALID_SIGNATURE,
  Tr as E_NATIVE_MODULES_COMMON_FUNCTION_NOT_FOUND,
  Nr as E_NATIVE_MODULES_COMMON_MODULE_NOT_FOUND,
  Ar as E_NATIVE_MODULES_COMMON_WRONG_PARAM_NUM,
  Ir as E_NATIVE_MODULES_COMMON_WRONG_PARAM_TYPE,
  Cr as E_NATIVE_MODULES_CUSTOM_ERROR,
  Or as E_NATIVE_MODULES_EXCEPTION,
  Mr as E_NATIVE_MODULES_NETWORK,
  dr as E_RESOURCE_CUSTOM,
  mr as E_RESOURCE_EXCEPTION,
  nr as E_RESOURCE_EXTERNAL_RESOURCE,
  sr as E_RESOURCE_EXTERNAL_RESOURCE_FETCHER_EXCEPTION,
  ar as E_RESOURCE_EXTERNAL_RESOURCE_LOCAL_RESOURCE_LOAD_FAIL,
  or as E_RESOURCE_EXTERNAL_RESOURCE_REQUEST_FAILED,
  ir as E_RESOURCE_EXTERNAL_RESOURCE_SERVICE_EXCEPTION,
  rr as E_RESOURCE_FONT,
  lr as E_RESOURCE_I18N,
  Kt as E_RESOURCE_IMAGE,
  Xt as E_RESOURCE_IMAGE_BIG_IMAGE,
  tr as E_RESOURCE_IMAGE_EXCEPTION,
  er as E_RESOURCE_IMAGE_FROM_NETWORK_OR_OTHERS,
  Zt as E_RESOURCE_IMAGE_FROM_USER_OR_DESIGN,
  zt as E_RESOURCE_IMAGE_PIC_SOURCE,
  cr as E_RESOURCE_MODULE_IMG_PREFETCH_HELPER_NOT_EXIST,
  pr as E_RESOURCE_MODULE_PARAMS_ERROR,
  ur as E_RESOURCE_MODULE_RESOURCE_SERVICE_NOT_EXIST,
  qr as E_SSR_API_VERSION_NOT_SUPPORTED,
  Fr as E_SSR_DECODE,
  Vr as E_SSR_EXCEPTION,
  jr as E_SSR_HYDRATE_RESULT_DEVIATE_FROM_SSR_RESULT,
  Br as E_SSR_LOAD_DATA,
  jt as E_SUCCESS,
  Ur as E_THREAD_WRONG_THREAD,
  Jr as E_WORKLET_LEPUS_CALL_EXCEPTION,
  Hr as E_WORKLET_MODULE_EXCEPTION,
  Yr as E_WORKLET_RAF_CALL_EXCEPTION,
  be as Element,
  nt as EnvKey,
  Ne as ErrorCode,
  $ as EventEmitter,
  ie as ExposureManager,
  Q as Headers,
  Ve as IdentifierType,
  Z as InternalError,
  Me as InternalLepusNgError,
  R as InternalRuntimeError,
  Ee as IntersectionObserver,
  se as IntersectionObserverManager,
  te as InvokeError,
  pe as KeyframeEffect,
  A as LYNX_CORE,
  U as Lynx,
  Oe as LynxErrorLevel,
  We as LynxFeature,
  je as MessageEventType,
  ce as NodeRef,
  w as NodesRef,
  ve as Performance,
  V as Reporter,
  Pe as SOURCE_MAP_RELEASE_ERROR_NAME,
  M as SelectorQuery,
  re as ShareDataSubject,
  F as StandaloneApp,
  oe as TextInfoManager,
  Be as URL,
  To as URLSearchParamsPolyfill,
  ee as UserError,
  x as UserRuntimeError,
  Ie as UserValidateError,
  Ye as Version,
  I as alog,
  os as arrayBufferToBase64,
  is as base64ToArrayBuffer,
  Bs as callDestroyLifetimeFun,
  Xe as createEventEmitter,
  Re as createRequestClass,
  Se as createResponseClass,
  Fs as destroyCard,
  we as getPromiseMaybePolyfill,
  st as handleLoadCardError,
  He as legacyReportError,
  ks as loadCard,
  qs as loadDynamicComponent,
  c as nativeGlobal,
  ze as needPromisePolyfill,
  Lt as report,
  E as reportError,
  Ke as reportThrowError,
  Ft as version2_12,
  Bt as version2_14,
  wt as version2_4,
  Ut as version2_7,
  kt as version2_9,
  Pn as wrapInnerFunction,
  On as wrapUserFunction,
};
