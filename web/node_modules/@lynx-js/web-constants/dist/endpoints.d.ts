import type { ExposureWorkerEvent, LynxCrossThreadEvent } from './types/EventType.js';
import type { Cloneable, CloneableObject } from './types/Cloneable.js';
import type { MainThreadStartConfigs } from './types/MainThreadStartConfigs.js';
import type { LynxLifecycleEvent } from './types/LynxLifecycleEvent.js';
import type { ElementOperation, FlushElementTreeOptions } from './types/ElementOperation.js';
import type { PageConfig } from './types/PageConfig.js';
import type { IdentifierType, InvokeCallbackRes } from './types/NativeApp.js';
import type { LynxTemplate } from './types/LynxModule.js';
export declare const postExposureEndpoint: import("@lynx-js/web-worker-rpc/dist/RpcEndpoint.js").RpcEndpointAsyncVoid<[{
    exposures: ExposureWorkerEvent[];
    disExposures: ExposureWorkerEvent[];
}]>;
export declare const publicComponentEventEndpoint: import("@lynx-js/web-worker-rpc/dist/RpcEndpoint.js").RpcEndpointAsyncVoid<[string, string, LynxCrossThreadEvent<{
    [key: string]: string | number | null | undefined;
}>]>;
export declare const publishEventEndpoint: import("@lynx-js/web-worker-rpc/dist/RpcEndpoint.js").RpcEndpointAsyncVoid<[string, LynxCrossThreadEvent<{
    [key: string]: string | number | null | undefined;
}>]>;
export declare const postMainThreadEvent: import("@lynx-js/web-worker-rpc/dist/RpcEndpoint.js").RpcEndpointAsyncVoid<[LynxCrossThreadEvent<{
    [key: string]: string | number | null | undefined;
}>]>;
export declare const switchExposureService: import("@lynx-js/web-worker-rpc/dist/RpcEndpoint.js").RpcEndpointAsyncVoid<[boolean, boolean]>;
export declare const mainThreadStartEndpoint: import("@lynx-js/web-worker-rpc/dist/RpcEndpoint.js").RpcEndpointAsyncVoid<[MainThreadStartConfigs]>;
export declare const updateDataEndpoint: import("@lynx-js/web-worker-rpc/dist/RpcEndpoint.js").RpcEndpointAsync<[Cloneable, Record<string, string>], void>;
export declare const sendGlobalEventEndpoint: import("@lynx-js/web-worker-rpc/dist/RpcEndpoint.js").RpcEndpointAsyncVoid<[string, Cloneable[] | undefined]>;
export declare const disposeEndpoint: import("@lynx-js/web-worker-rpc/dist/RpcEndpoint.js").RpcEndpointAsync<[], void>;
export declare const postTimingResult: import("@lynx-js/web-worker-rpc/dist/RpcEndpoint.js").RpcEndpointAsyncVoid<[pipelineId: string | undefined, updateTimingStamps: Record<string, number>, timingFlags: string[], setupTimingStamps: Record<string, number> | undefined]>;
export declare const uiThreadFpReadyEndpoint: import("@lynx-js/web-worker-rpc/dist/RpcEndpoint.js").RpcEndpointAsyncVoid<[]>;
export declare const onLifecycleEventEndpoint: import("@lynx-js/web-worker-rpc/dist/RpcEndpoint.js").RpcEndpointAsyncVoid<[LynxLifecycleEvent]>;
export declare const BackgroundThreadStartEndpoint: import("@lynx-js/web-worker-rpc/dist/RpcEndpoint.js").RpcEndpointAsync<[{
    initData: unknown;
    globalProps: unknown;
    template: LynxTemplate;
    cardType: string;
    customSections: Record<string, Cloneable>;
    nativeModulesUrl?: string;
}], void>;
export declare const loadNewTagEndpoint: import("@lynx-js/web-worker-rpc/dist/RpcEndpoint.js").RpcEndpointAsync<[tag: string], void>;
/**
 * threadLabel, Error message, info
 */
export declare const reportErrorEndpoint: import("@lynx-js/web-worker-rpc/dist/RpcEndpoint.js").RpcEndpointAsync<[string, string, unknown], void>;
export declare const flushElementTreeEndpoint: import("@lynx-js/web-worker-rpc/dist/RpcEndpoint.js").RpcEndpointAsync<[operations: ElementOperation[], FlushElementTreeOptions, styleContent: string | undefined], void>;
export declare const mainThreadChunkReadyEndpoint: import("@lynx-js/web-worker-rpc/dist/RpcEndpoint.js").RpcEndpointAsyncVoid<[{
    pageConfig: PageConfig;
}]>;
export declare const postTimingInfoFromMainThread: import("@lynx-js/web-worker-rpc/dist/RpcEndpoint.js").RpcEndpointAsyncVoid<[timingKey: string, pipelineId: string | undefined, timeStamp: number]>;
export declare const callLepusMethodEndpoint: import("@lynx-js/web-worker-rpc/dist/RpcEndpoint.js").RpcEndpointAsync<[name: string, data: unknown], void>;
export declare const invokeUIMethodEndpoint: import("@lynx-js/web-worker-rpc/dist/RpcEndpoint.js").RpcEndpointAsync<[type: IdentifierType, identifier: string, component_id: string, method: string, params: object, root_unique_id: number | undefined], InvokeCallbackRes>;
export declare const setNativePropsEndpoint: import("@lynx-js/web-worker-rpc/dist/RpcEndpoint.js").RpcEndpointAsync<[type: IdentifierType, identifier: string, component_id: string, first_only: boolean, native_props: object, root_unique_id: number | undefined], void>;
export declare const nativeModulesCallEndpoint: import("@lynx-js/web-worker-rpc/dist/RpcEndpoint.js").RpcEndpointAsync<[name: string, data: Cloneable, moduleName: string], any>;
export declare const getCustomSectionsEndpoint: import("@lynx-js/web-worker-rpc/dist/RpcEndpoint.js").RpcEndpointAsync<[string], Cloneable>;
export declare const postTimingInfoFromBackgroundThread: import("@lynx-js/web-worker-rpc/dist/RpcEndpoint.js").RpcEndpointAsyncVoid<[timingKey: string, pipelineId: string | undefined, timeStamp: number]>;
export declare const triggerComponentEventEndpoint: import("@lynx-js/web-worker-rpc/dist/RpcEndpoint.js").RpcEndpointAsyncVoid<[id: string, params: {
    eventDetail: CloneableObject;
    eventOption: CloneableObject;
    componentId: string;
}]>;
export declare const selectComponentEndpoint: import("@lynx-js/web-worker-rpc/dist/RpcEndpoint.js").RpcEndpointAsync<[componentId: string, idSelector: string, single: boolean], void>;
