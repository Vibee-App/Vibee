import { __esDecorate, __runInitializers, __setFunctionName } from "tslib";
/*
// Copyright 2024 The Lynx Authors. All rights reserved.
// Licensed under the Apache License Version 2.0 that can be found in the
// LICENSE file in the root directory of this source tree.
*/
import { Component, registerAttributeHandler, } from '@lynx-js/web-elements-reactive';
let RawTextAttributes = (() => {
    let _instanceExtraInitializers = [];
    let _private_handleText_decorators;
    let _private_handleText_descriptor;
    return class RawTextAttributes {
        static {
            const _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
            _private_handleText_decorators = [registerAttributeHandler('text', true)];
            __esDecorate(this, _private_handleText_descriptor = { value: __setFunctionName(function (newVal) {
                    if (newVal) {
                        this.#dom.innerHTML = newVal;
                    }
                    else {
                        this.#dom.innerHTML = '';
                    }
                }, "#handleText") }, _private_handleText_decorators, { kind: "method", name: "#handleText", static: false, private: true, access: { has: obj => #handleText in obj, get: obj => obj.#handleText }, metadata: _metadata }, null, _instanceExtraInitializers);
            if (_metadata) Object.defineProperty(this, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        }
        static observedAttributes = ['text'];
        #dom = __runInitializers(this, _instanceExtraInitializers);
        constructor(currentElement) {
            this.#dom = currentElement;
        }
        get #handleText() { return _private_handleText_descriptor.value; }
    };
})();
export { RawTextAttributes };
let RawText = (() => {
    let _classDecorators = [Component('raw-text', [RawTextAttributes])];
    let _classDescriptor;
    let _classExtraInitializers = [];
    let _classThis;
    let _classSuper = HTMLElement;
    var RawText = class extends _classSuper {
        static { _classThis = this; }
        static {
            const _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(_classSuper[Symbol.metadata] ?? null) : void 0;
            __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
            RawText = _classThis = _classDescriptor.value;
            if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
            __runInitializers(_classThis, _classExtraInitializers);
        }
    };
    return RawText = _classThis;
})();
export { RawText };
//# sourceMappingURL=RawText.js.map