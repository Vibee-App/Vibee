export declare class XList extends HTMLElement {
    #private;
    static readonly notToFilterFalseAttributes: Set<string>;
    get scrollTop(): number;
    set scrollTop(val: number);
    get scrollLeft(): number;
    set scrollLeft(val: number);
    get __scrollTop(): number;
    get __scrollLeft(): number;
    scrollToPosition(params: {
        index: number;
        smooth?: boolean;
        /**
         * @description The offset of the content
         * @defaultValue 0
         */
        offset?: `${number}px` | `${number}rpx` | `${number}ppx` | number;
    }): void;
    autoScroll(params: {
        /**
         * @description The scrolling interval per second, supports positive and negative
         * @defaultValue null
         */
        rate: `${number}px` | `${number}rpx` | `${number}ppx` | number;
        /**
         * @description start/pause autoScroll
         * @defaultValue true
         */
        start: boolean;
        /**
         * @description Whether to stop automatically when sliding to the bottom
         * @defaultValue true
         */
        autoStop: boolean;
    }): void;
    getScrollContainerInfo(): {
        scrollTop: number;
        scrollLeft: number;
        scrollHeight: number;
        scrollWidth: number;
    };
    getVisibleCells: () => {
        id: string | null;
        itemKey: string | null;
        bottom: number;
        top: number;
        left: number;
        right: number;
        index: number;
    }[];
    connectedCallback(): void;
}
