import { __esDecorate, __runInitializers } from "tslib";
/*
// Copyright 2024 The Lynx Authors. All rights reserved.
// Licensed under the Apache License Version 2.0 that can be found in the
// LICENSE file in the root directory of this source tree.
*/
import { bindToAttribute, bindToStyle, genDomGetter, registerAttributeHandler, } from '@lynx-js/web-elements-reactive';
let Placeholder = (() => {
    let _private_handlerPlaceholder_decorators;
    let _private_handlerPlaceholder_initializers = [];
    let _private_handlerPlaceholder_extraInitializers = [];
    let _private_handlerPlaceholderColor_decorators;
    let _private_handlerPlaceholderColor_initializers = [];
    let _private_handlerPlaceholderColor_extraInitializers = [];
    let _private_handlerPlaceholderFontFamily_decorators;
    let _private_handlerPlaceholderFontFamily_initializers = [];
    let _private_handlerPlaceholderFontFamily_extraInitializers = [];
    let _private_handlerPlaceholderFontSize_decorators;
    let _private_handlerPlaceholderFontSize_initializers = [];
    let _private_handlerPlaceholderFontSize_extraInitializers = [];
    let _private_handlerPlaceholderFontWeight_decorators;
    let _private_handlerPlaceholderFontWeight_initializers = [];
    let _private_handlerPlaceholderFontWeight_extraInitializers = [];
    return class Placeholder {
        static {
            const _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
            _private_handlerPlaceholder_decorators = [registerAttributeHandler('placeholder', true)];
            _private_handlerPlaceholderColor_decorators = [registerAttributeHandler('placeholder-color', true)];
            _private_handlerPlaceholderFontFamily_decorators = [registerAttributeHandler('placeholder-font-family', true)];
            _private_handlerPlaceholderFontSize_decorators = [registerAttributeHandler('placeholder-font-size', true)];
            _private_handlerPlaceholderFontWeight_decorators = [registerAttributeHandler('placeholder-font-weight', true)];
            __esDecorate(null, null, _private_handlerPlaceholder_decorators, { kind: "field", name: "#handlerPlaceholder", static: false, private: true, access: { has: obj => #handlerPlaceholder in obj, get: obj => obj.#handlerPlaceholder, set: (obj, value) => { obj.#handlerPlaceholder = value; } }, metadata: _metadata }, _private_handlerPlaceholder_initializers, _private_handlerPlaceholder_extraInitializers);
            __esDecorate(null, null, _private_handlerPlaceholderColor_decorators, { kind: "field", name: "#handlerPlaceholderColor", static: false, private: true, access: { has: obj => #handlerPlaceholderColor in obj, get: obj => obj.#handlerPlaceholderColor, set: (obj, value) => { obj.#handlerPlaceholderColor = value; } }, metadata: _metadata }, _private_handlerPlaceholderColor_initializers, _private_handlerPlaceholderColor_extraInitializers);
            __esDecorate(null, null, _private_handlerPlaceholderFontFamily_decorators, { kind: "field", name: "#handlerPlaceholderFontFamily", static: false, private: true, access: { has: obj => #handlerPlaceholderFontFamily in obj, get: obj => obj.#handlerPlaceholderFontFamily, set: (obj, value) => { obj.#handlerPlaceholderFontFamily = value; } }, metadata: _metadata }, _private_handlerPlaceholderFontFamily_initializers, _private_handlerPlaceholderFontFamily_extraInitializers);
            __esDecorate(null, null, _private_handlerPlaceholderFontSize_decorators, { kind: "field", name: "#handlerPlaceholderFontSize", static: false, private: true, access: { has: obj => #handlerPlaceholderFontSize in obj, get: obj => obj.#handlerPlaceholderFontSize, set: (obj, value) => { obj.#handlerPlaceholderFontSize = value; } }, metadata: _metadata }, _private_handlerPlaceholderFontSize_initializers, _private_handlerPlaceholderFontSize_extraInitializers);
            __esDecorate(null, null, _private_handlerPlaceholderFontWeight_decorators, { kind: "field", name: "#handlerPlaceholderFontWeight", static: false, private: true, access: { has: obj => #handlerPlaceholderFontWeight in obj, get: obj => obj.#handlerPlaceholderFontWeight, set: (obj, value) => { obj.#handlerPlaceholderFontWeight = value; } }, metadata: _metadata }, _private_handlerPlaceholderFontWeight_initializers, _private_handlerPlaceholderFontWeight_extraInitializers);
            if (_metadata) Object.defineProperty(this, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        }
        static observedAttributes = [
            'placeholder',
            'placeholder-color',
            'placeholder-font-family',
            'placeholder-font-size',
            'placeholder-font-weight',
        ];
        #dom;
        #getInputElement = genDomGetter(() => this.#dom.shadowRoot, '#input');
        #handlerPlaceholder = __runInitializers(this, _private_handlerPlaceholder_initializers, bindToAttribute(this.#getInputElement, 'placeholder'));
        #handlerPlaceholderColor = (__runInitializers(this, _private_handlerPlaceholder_extraInitializers), __runInitializers(this, _private_handlerPlaceholderColor_initializers, bindToStyle(this.#getInputElement, '--placeholder-color', undefined, true)));
        #handlerPlaceholderFontFamily = (__runInitializers(this, _private_handlerPlaceholderColor_extraInitializers), __runInitializers(this, _private_handlerPlaceholderFontFamily_initializers, bindToStyle(this.#getInputElement, '--placeholder-font-family', undefined, true)));
        #handlerPlaceholderFontSize = (__runInitializers(this, _private_handlerPlaceholderFontFamily_extraInitializers), __runInitializers(this, _private_handlerPlaceholderFontSize_initializers, bindToStyle(this.#getInputElement, '--placeholder-font-size', undefined, true)));
        #handlerPlaceholderFontWeight = (__runInitializers(this, _private_handlerPlaceholderFontSize_extraInitializers), __runInitializers(this, _private_handlerPlaceholderFontWeight_initializers, bindToStyle(this.#getInputElement, '--placeholder-font-weight', undefined, true)));
        constructor(dom) {
            __runInitializers(this, _private_handlerPlaceholderFontWeight_extraInitializers);
            this.#dom = dom;
        }
    };
})();
export { Placeholder };
//# sourceMappingURL=Placeholder.js.map