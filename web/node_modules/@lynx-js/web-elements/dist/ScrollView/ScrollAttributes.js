import { __esDecorate, __runInitializers, __setFunctionName } from "tslib";
/*
// Copyright 2024 The Lynx Authors. All rights reserved.
// Licensed under the Apache License Version 2.0 that can be found in the
// LICENSE file in the root directory of this source tree.
*/
import { registerAttributeHandler, } from '@lynx-js/web-elements-reactive';
let ScrollAttributes = (() => {
    let _instanceExtraInitializers = [];
    let _private_handleInitialScrollOffset_decorators;
    let _private_handleInitialScrollOffset_descriptor;
    let _private_handleInitialScrollIndex_decorators;
    let _private_handleInitialScrollIndex_descriptor;
    return class ScrollAttributes {
        static {
            const _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
            _private_handleInitialScrollOffset_decorators = [registerAttributeHandler('scroll-top', false), registerAttributeHandler('scroll-left', false), registerAttributeHandler('nitial-scroll-offset', false)];
            _private_handleInitialScrollIndex_decorators = [registerAttributeHandler('scroll-to-index', false), registerAttributeHandler('initial-scroll-index', false)];
            __esDecorate(this, _private_handleInitialScrollOffset_descriptor = { value: __setFunctionName(function (newVal, _, attributeName) {
                    if (newVal) {
                        const scrollValue = parseFloat(newVal);
                        const scrollOrientation = this.#dom.getAttribute('scroll-orientation');
                        const scrollY = this.#dom.getAttribute('scroll-y');
                        const scrollX = this.#dom.getAttribute('scroll-x');
                        const topScrollDistance = (attributeName === 'scroll-top'
                            || attributeName === 'initial-scroll-offset')
                            && (scrollY === ''
                                || scrollY === 'true'
                                || scrollOrientation === 'vertical'
                                || scrollOrientation === 'both');
                        const leftScrollDistance = (attributeName === 'scroll-left'
                            || attributeName === 'initial-scroll-offset')
                            && (scrollX === ''
                                || scrollX === 'true'
                                || scrollOrientation === 'vertical'
                                || scrollOrientation === 'both');
                        requestAnimationFrame(() => {
                            if (topScrollDistance) {
                                this.#dom.scrollTo(0, scrollValue);
                            }
                            if (leftScrollDistance) {
                                this.#dom.scrollLeft = scrollValue;
                            }
                        });
                    }
                }, "#handleInitialScrollOffset") }, _private_handleInitialScrollOffset_decorators, { kind: "method", name: "#handleInitialScrollOffset", static: false, private: true, access: { has: obj => #handleInitialScrollOffset in obj, get: obj => obj.#handleInitialScrollOffset }, metadata: _metadata }, null, _instanceExtraInitializers);
            __esDecorate(this, _private_handleInitialScrollIndex_descriptor = { value: __setFunctionName(function (newVal) {
                    if (newVal) {
                        const scrollValue = parseFloat(newVal);
                        const childrenElement = this.#dom.children.item(scrollValue);
                        if (childrenElement && childrenElement instanceof HTMLElement) {
                            const scrollX = !!this.#dom.getAttribute('scroll-x');
                            requestAnimationFrame(() => {
                                if (scrollX) {
                                    this.#dom.scrollLeft = childrenElement.offsetLeft;
                                }
                                else {
                                    this.#dom.scrollTop = childrenElement.offsetTop;
                                }
                            });
                        }
                    }
                }, "#handleInitialScrollIndex") }, _private_handleInitialScrollIndex_decorators, { kind: "method", name: "#handleInitialScrollIndex", static: false, private: true, access: { has: obj => #handleInitialScrollIndex in obj, get: obj => obj.#handleInitialScrollIndex }, metadata: _metadata }, null, _instanceExtraInitializers);
            if (_metadata) Object.defineProperty(this, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        }
        #dom = __runInitializers(this, _instanceExtraInitializers);
        static observedAttributes = [
            'scroll-top',
            'scroll-left',
            'initial-scroll-offset',
            'scroll-to-index',
            'initial-scroll-index',
        ];
        constructor(dom) {
            this.#dom = dom;
        }
        get #handleInitialScrollOffset() { return _private_handleInitialScrollOffset_descriptor.value; }
        get #handleInitialScrollIndex() { return _private_handleInitialScrollIndex_descriptor.value; }
        dispose() { }
    };
})();
export { ScrollAttributes };
//# sourceMappingURL=ScrollAttributes.js.map