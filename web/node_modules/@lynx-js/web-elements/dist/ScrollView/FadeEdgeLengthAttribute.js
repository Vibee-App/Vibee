import { __esDecorate, __runInitializers, __setFunctionName } from "tslib";
/*
// Copyright 2024 The Lynx Authors. All rights reserved.
// Licensed under the Apache License Version 2.0 that can be found in the
// LICENSE file in the root directory of this source tree.
*/
import { bindToStyle, genDomGetter, registerAttributeHandler, registerStyleChangeHandler, } from '@lynx-js/web-elements-reactive';
let FadeEdgeLengthAttribute = (() => {
    let _instanceExtraInitializers = [];
    let _private_handleFadingEdgeLength_decorators;
    let _private_handleFadingEdgeLength_initializers = [];
    let _private_handleFadingEdgeLength_extraInitializers = [];
    let _private_backgroundColorToVariable_decorators;
    let _private_backgroundColorToVariable_descriptor;
    return class FadeEdgeLengthAttribute {
        static {
            const _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
            _private_handleFadingEdgeLength_decorators = [registerAttributeHandler('fading-edge-length', true)];
            _private_backgroundColorToVariable_decorators = [registerStyleChangeHandler('background'), registerStyleChangeHandler('background-color')];
            __esDecorate(this, _private_backgroundColorToVariable_descriptor = { value: __setFunctionName(function (backGroundColor) {
                    this.#getTopFadeMask().style.setProperty('--scroll-view-bg-color', backGroundColor);
                    this.#getBotFadeMask().style.setProperty('--scroll-view-bg-color', backGroundColor);
                }, "#backgroundColorToVariable") }, _private_backgroundColorToVariable_decorators, { kind: "method", name: "#backgroundColorToVariable", static: false, private: true, access: { has: obj => #backgroundColorToVariable in obj, get: obj => obj.#backgroundColorToVariable }, metadata: _metadata }, null, _instanceExtraInitializers);
            __esDecorate(null, null, _private_handleFadingEdgeLength_decorators, { kind: "field", name: "#handleFadingEdgeLength", static: false, private: true, access: { has: obj => #handleFadingEdgeLength in obj, get: obj => obj.#handleFadingEdgeLength, set: (obj, value) => { obj.#handleFadingEdgeLength = value; } }, metadata: _metadata }, _private_handleFadingEdgeLength_initializers, _private_handleFadingEdgeLength_extraInitializers);
            if (_metadata) Object.defineProperty(this, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        }
        #dom = __runInitializers(this, _instanceExtraInitializers);
        #getTopFadeMask = genDomGetter(() => this.#dom.shadowRoot, '#top-fade-mask');
        #getBotFadeMask = genDomGetter(() => this.#dom.shadowRoot, '#bot-fade-mask');
        static observedAttributes = ['fading-edge-length'];
        static observedCSSProperties = ['background', 'background-color'];
        constructor(dom) {
            __runInitializers(this, _private_handleFadingEdgeLength_extraInitializers);
            this.#dom = dom;
        }
        #handleFadingEdgeLength = __runInitializers(this, _private_handleFadingEdgeLength_initializers, bindToStyle(() => this.#dom, '--scroll-view-fading-edge-length', (v) => `${parseFloat(v)}px`));
        get #backgroundColorToVariable() { return _private_backgroundColorToVariable_descriptor.value; }
        connectedCallback() { }
        dispose() { }
    };
})();
export { FadeEdgeLengthAttribute };
//# sourceMappingURL=FadeEdgeLengthAttribute.js.map