import { __esDecorate, __runInitializers } from "tslib";
/*
// Copyright 2024 The Lynx Authors. All rights reserved.
// Licensed under the Apache License Version 2.0 that can be found in the
// LICENSE file in the root directory of this source tree.
*/
import { LynxExposure } from '../common/Exposure.js';
import { XOverlayAttributes } from './XOverlayAttributes.js';
import { Component, html } from '@lynx-js/web-elements-reactive';
let XOverlayNg = (() => {
    let _classDecorators = [Component('x-overlay-ng', [LynxExposure, XOverlayAttributes], html `
    <style>
      #dialog[open] {
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        position: fixed;
      }
      #dialog::backdrop {
        background-color: transparent;
      }
    </style>
    <dialog id="dialog" part="dialog">
      <slot></slot>
    </dialog>
  `)];
    let _classDescriptor;
    let _classExtraInitializers = [];
    let _classThis;
    let _classSuper = HTMLElement;
    var XOverlayNg = class extends _classSuper {
        static { _classThis = this; }
        static {
            const _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(_classSuper[Symbol.metadata] ?? null) : void 0;
            __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
            XOverlayNg = _classThis = _classDescriptor.value;
            if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
            __runInitializers(_classThis, _classExtraInitializers);
        }
    };
    return XOverlayNg = _classThis;
})();
export { XOverlayNg };
//# sourceMappingURL=XOverlayNg.js.map