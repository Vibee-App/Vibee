import { __esDecorate, __runInitializers } from "tslib";
/*
// Copyright 2024 The Lynx Authors. All rights reserved.
// Licensed under the Apache License Version 2.0 that can be found in the
// LICENSE file in the root directory of this source tree.
*/
import { Component } from '@lynx-js/web-elements-reactive';
import { LynxExposure } from '../common/Exposure.js';
import { XFoldviewNgEvents } from './XFoldviewNgEvents.js';
import { scrollContainerDom } from '../common/constants.js';
let XFoldviewNg = (() => {
    let _classDecorators = [Component('x-foldview-ng', [
            LynxExposure,
            XFoldviewNgEvents,
        ])];
    let _classDescriptor;
    let _classExtraInitializers = [];
    let _classThis;
    let _classSuper = HTMLElement;
    var XFoldviewNg = class extends _classSuper {
        static { _classThis = this; }
        static {
            const _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(_classSuper[Symbol.metadata] ?? null) : void 0;
            __esDecorate(null, _classDescriptor = { value: _classThis }, _classDecorators, { kind: "class", name: _classThis.name, metadata: _metadata }, null, _classExtraInitializers);
            XFoldviewNg = _classThis = _classDescriptor.value;
            if (_metadata) Object.defineProperty(_classThis, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        }
        static notToFilterFalseAttributes = new Set(['scroll-enable']);
        __scrollableLength = 0;
        get __headershowing() {
            // This behavior cannot be reproduced in the current test, but can be reproduced in Android WebView
            return Math.abs(this.scrollTop - this.__scrollableLength) > 1;
        }
        setFoldExpanded(params) {
            const { offset, smooth = true } = params;
            const offsetValue = parseFloat(offset);
            this.scrollTo({
                top: offsetValue,
                behavior: smooth ? 'smooth' : 'instant',
            });
        }
        get [scrollContainerDom]() {
            return this;
        }
        static {
            __runInitializers(_classThis, _classExtraInitializers);
        }
    };
    return XFoldviewNg = _classThis;
})();
export { XFoldviewNg };
//# sourceMappingURL=XFoldviewNg.js.map