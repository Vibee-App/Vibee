import { __esDecorate, __runInitializers, __setFunctionName } from "tslib";
/*
// Copyright 2024 The Lynx Authors. All rights reserved.
// Licensed under the Apache License Version 2.0 that can be found in the
// LICENSE file in the root directory of this source tree.
*/
import { registerAttributeHandler, } from '@lynx-js/web-elements-reactive';
import { commonComponentEventSetting } from '../common/commonEventInitConfiguration.js';
let XFoldviewNgEvents = (() => {
    let _instanceExtraInitializers = [];
    let _private_handleGranularity_decorators;
    let _private_handleGranularity_descriptor;
    return class XFoldviewNgEvents {
        static {
            const _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;
            _private_handleGranularity_decorators = [registerAttributeHandler('granularity', true)];
            __esDecorate(this, _private_handleGranularity_descriptor = { value: __setFunctionName(function (newVal) {
                    if (newVal && newVal !== '')
                        this.#granularity = parseFloat(newVal);
                    else
                        this.#granularity = 0.01;
                }, "#handleGranularity") }, _private_handleGranularity_decorators, { kind: "method", name: "#handleGranularity", static: false, private: true, access: { has: obj => #handleGranularity in obj, get: obj => obj.#handleGranularity }, metadata: _metadata }, null, _instanceExtraInitializers);
            if (_metadata) Object.defineProperty(this, Symbol.metadata, { enumerable: true, configurable: true, writable: true, value: _metadata });
        }
        #dom = __runInitializers(this, _instanceExtraInitializers);
        #granularity = 0.01;
        #pervScroll = 0;
        constructor(dom) {
            this.#dom = dom;
            this.#dom.addEventListener('scroll', this.#handleScroll, {
                passive: true,
            });
        }
        static observedAttributes = ['granularity'];
        get #handleGranularity() { return _private_handleGranularity_descriptor.value; }
        #handleScroll = () => {
            const curentScrollTop = this.#dom.scrollTop;
            const scrollLength = Math.abs(this.#pervScroll - curentScrollTop);
            if (scrollLength > this.#granularity
                || this.#dom.scrollTop === 0
                || Math.abs(this.#dom.scrollHeight - this.#dom.clientHeight - this.#dom.scrollTop) <= 1) {
                this.#pervScroll = curentScrollTop;
                this.#dom.dispatchEvent(new CustomEvent('offset', {
                    ...commonComponentEventSetting,
                    detail: {
                        offset: curentScrollTop,
                        height: this.#dom.__scrollableLength,
                    },
                }));
            }
        };
    };
})();
export { XFoldviewNgEvents };
//# sourceMappingURL=XFoldviewNgEvents.js.map