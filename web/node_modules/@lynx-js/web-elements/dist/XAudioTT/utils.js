/*
// Copyright 2024 The Lynx Authors. All rights reserved.
// Licensed under the Apache License Version 2.0 that can be found in the
// LICENSE file in the root directory of this source tree.
*/
export const xAudioSrc = Symbol('__src');
export const xAudioBlob = Symbol('__src');
export const audioLoadingStateMap = {
    loadstart: {
        code: 0,
        type: 'init',
    },
    canplay: {
        code: 1,
        type: 'playable',
    },
    // Code 2 refers to the audio loading jam, which is a resource decoding problem
    // cannot be implemented at present, use stalled replaced
    stalled: {
        code: 2,
        type: 'stalled',
    },
    error: {
        code: 3,
        type: 'error',
    },
};
export const audioPlaybackStateMap = {
    stop: {
        code: 0,
        type: 'stopped',
    },
    play: {
        code: 1,
        type: 'playing',
    },
    pause: {
        code: 2,
        type: 'paused',
    },
};
export const getAudioState = (audioElement) => {
    if (!audioElement) {
        return -1;
    }
    if (audioElement.paused) {
        if (audioElement.ended) {
            return 0;
        }
        return 2;
    }
    if (audioElement.currentTime > 0) {
        return 1;
    }
    return 3;
};
export var XAudioErrorCode;
(function (XAudioErrorCode) {
    XAudioErrorCode[XAudioErrorCode["SrcError"] = -1] = "SrcError";
    XAudioErrorCode[XAudioErrorCode["SrcJsonError"] = -2] = "SrcJsonError";
    XAudioErrorCode[XAudioErrorCode["DownloadError"] = -3] = "DownloadError";
    XAudioErrorCode[XAudioErrorCode["PlayerFinishedError"] = -4] = "PlayerFinishedError";
    XAudioErrorCode[XAudioErrorCode["PlayerLoadingError"] = -5] = "PlayerLoadingError";
    XAudioErrorCode[XAudioErrorCode["PlayerPlaybackError"] = -6] = "PlayerPlaybackError";
})(XAudioErrorCode || (XAudioErrorCode = {}));
//# sourceMappingURL=utils.js.map