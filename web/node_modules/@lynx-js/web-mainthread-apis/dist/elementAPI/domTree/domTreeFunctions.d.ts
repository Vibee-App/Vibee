import type { ElementThreadElement } from '../ElementThreadElement.js';
export declare function __AppendElement(parent: ElementThreadElement, child: ElementThreadElement): void;
export declare function __ElementIsEqual(left: ElementThreadElement, right: ElementThreadElement): boolean;
export declare function __FirstElement(element: ElementThreadElement): ElementThreadElement | undefined;
export declare function __GetChildren(element: ElementThreadElement): ElementThreadElement[];
export declare function __GetParent(element: ElementThreadElement): ElementThreadElement | undefined;
export declare function __InsertElementBefore(parent: ElementThreadElement, child: ElementThreadElement, ref: ElementThreadElement | null): ElementThreadElement;
export declare function __LastElement(element: ElementThreadElement): ElementThreadElement | undefined;
export declare function __NextElement(element: ElementThreadElement): ElementThreadElement | undefined;
export declare function __RemoveElement(parent: ElementThreadElement, child: ElementThreadElement): ElementThreadElement;
export declare function __ReplaceElement(newElement: ElementThreadElement, oldElement: ElementThreadElement): void;
export declare function __ReplaceElements(parent: ElementThreadElement, newChildren: ElementThreadElement[] | ElementThreadElement, oldChildren: ElementThreadElement[] | ElementThreadElement | null | undefined): void;
export declare function __SwapElement(childA: ElementThreadElement, childB: ElementThreadElement): void;
